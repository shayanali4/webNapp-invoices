[{"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js":"1","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js":"2","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js":"3","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js":"4","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js":"5","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js":"6","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js":"7","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js":"8","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js":"9","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js":"10","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js":"11","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js":"12","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js":"13","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js":"14","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js":"15","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js":"16","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js":"17","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js":"18","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js":"19","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js":"20","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js":"21","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js":"22","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js":"23","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js":"24","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\emailActions.js":"25","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\emailConstants.js":"26","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripePayment\\StripePayment.js":"27","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CustomersScreen.js":"28","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\EditCustomersScreen.js":"29"},{"size":617,"mtime":1614052918248,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1611774201000,"results":"32","hashOfConfig":"31"},{"size":355,"mtime":1614242189605,"results":"33","hashOfConfig":"31"},{"size":1619,"mtime":1615346043450,"results":"34","hashOfConfig":"31"},{"size":6000,"mtime":1615169762647,"results":"35","hashOfConfig":"31"},{"size":4376,"mtime":1615169427364,"results":"36","hashOfConfig":"31"},{"size":2348,"mtime":1615360405045,"results":"37","hashOfConfig":"31"},{"size":2036,"mtime":1615274449788,"results":"38","hashOfConfig":"31"},{"size":7746,"mtime":1615262066512,"results":"39","hashOfConfig":"31"},{"size":4415,"mtime":1615169404106,"results":"40","hashOfConfig":"31"},{"size":6238,"mtime":1615359590549,"results":"41","hashOfConfig":"31"},{"size":1268,"mtime":1614835061666,"results":"42","hashOfConfig":"31"},{"size":635,"mtime":1614053213717,"results":"43","hashOfConfig":"31"},{"size":214,"mtime":1614053398888,"results":"44","hashOfConfig":"31"},{"size":119,"mtime":1615361702950,"results":"45","hashOfConfig":"31"},{"size":2000,"mtime":1615360693582,"results":"46","hashOfConfig":"31"},{"size":190,"mtime":1608907475781,"results":"47","hashOfConfig":"31"},{"size":187,"mtime":1607771183599,"results":"48","hashOfConfig":"31"},{"size":5217,"mtime":1615356776642,"results":"49","hashOfConfig":"31"},{"size":1619,"mtime":1615264018857,"results":"50","hashOfConfig":"31"},{"size":11414,"mtime":1615356201142,"results":"51","hashOfConfig":"31"},{"size":21192,"mtime":1615356922515,"results":"52","hashOfConfig":"31"},{"size":406,"mtime":1614911174714,"results":"53","hashOfConfig":"31"},{"size":1598,"mtime":1614315326603,"results":"54","hashOfConfig":"31"},{"size":846,"mtime":1615186965266,"results":"55","hashOfConfig":"31"},{"size":163,"mtime":1615186636916,"results":"56","hashOfConfig":"31"},{"size":518,"mtime":1615351858524,"results":"57","hashOfConfig":"31"},{"size":2635,"mtime":1615351416630,"results":"58","hashOfConfig":"31"},{"size":4368,"mtime":1615347926021,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"556jn6",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js",[],["124","125"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js",["126","127","128","129"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { serviceList, newInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction InvoiceDetailsScreen(props) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;  \r\n  // const [services, setServices] = useState([]);\r\n\r\n  const [shortDescription, setShortDescription] = useState('');\r\n  const [longDescription, setLongDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const [serviceIndex, setServiceIndex] = useState();\r\n  // const [invoice, setInvoice] = useState({});\r\n  const [selectedService, setSelectedService] = useState({\r\n    shortDescription: '',\r\n    longDescription: '',\r\n    price: 0,\r\n    itemNumber:0\r\n  });\r\n  let tempService = {};\r\n  const [itemNumber, setItemNumber] = useState(0);\r\n  const [listItems, setListItems] = useState([]);\r\n  const servicesInfo = useSelector((state) => state.serviceInfo);\r\n  if (servicesInfo.servicesList) {\r\n    // console.log(\"services\", servicesInfo.servicesList)\r\n    // setServices(servicesInfo.servicesList);\r\n  }\r\n\r\n  const selectedClient = useSelector((state) => state.choosenClientInfo);\r\n  const { choosenClient } = selectedClient;    \r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      props.history.push('/');\r\n    }\r\n  }, [props.history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(serviceList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedClient) {\r\n      props.history.push('/create');\r\n    }\r\n  }, [props.history, selectedClient]);\r\n\r\n  useEffect(() => {\r\n    if (servicesInfo.servicesList) {\r\n      setSelectedService(servicesInfo.servicesList[serviceIndex]);\r\n    }\r\n          // setLongDescription(selectedService.longDescription);\r\n    // console.log(\"serv\", selectedService);\r\n\r\n  }, [serviceIndex, servicesInfo]);\r\n  \r\n  useEffect(() => {\r\n    if (selectedService) {\r\n      setLongDescription(selectedService.longDescription);\r\n      setPrice(selectedService.price)\r\n      console.log(\"serv\", selectedService);\r\n    }\r\n\r\n  }, [serviceIndex,selectedService])\r\n  useEffect(() => {\r\n    tempService = selectedService;\r\n    tempService.longDescription = longDescription;\r\n    setSelectedService(tempService)\r\n  }, [longDescription]);\r\n\r\n  useEffect(() => {\r\n    tempService = selectedService;\r\n    tempService.price = price;\r\n    setSelectedService(tempService)\r\n  }, [price]);\r\n\r\n  const addToList = () => {\r\n    setItemNumber(itemNumber+1)\r\n    const tempService = servicesInfo.servicesList[serviceIndex];\r\n    setListItems(prevArray => [...prevArray, {\r\n      shortDescription: tempService.shortDescription,\r\n      longDescription: tempService.longDescription,\r\n      price: tempService.price,\r\n      itemNumber: itemNumber\r\n    }]);\r\n  }\r\n\r\n  // console.log(selectedService);\r\n  // const addToList = () => {\r\n  //   setListItems(prevArray => [...prevArray, selectedService]);\r\n  // }\r\n\r\n  const removeFromList = (index) => {\r\n    const removedItem = listItems.splice(index,1);\r\n    setListItems(listItems.filter(x=>x.itemNumber!==removedItem[0].itemNumber));\r\n    // const tempList = listItems;\r\n    // const newList = delete tempList[index];\r\n    console.log(removedItem);\r\n\r\n  }\r\n  console.log(\"list items\",listItems)\r\n  const submitHandler = () => {\r\n    const totalAmount = listItems.reduce((prev, next) => prev + next.price, 0);\r\n\r\n    const generatedInvoice = {\r\n      clientName: choosenClient.clientName,\r\n      email: choosenClient.email,\r\n      phone: choosenClient.phone,\r\n      address: choosenClient.address,\r\n      ABN: choosenClient.ABN,\r\n      listItems: listItems,\r\n      totalAmount: totalAmount,\r\n      paidAmount: 0,\r\n      balanceAmount: totalAmount,\r\n    };\r\n    dispatch(newInvoice(generatedInvoice));\r\n\r\n    props.history.push('/generate');\r\n  }\r\n    return (\r\n      <>\r\n        <Header />\r\n      \r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n                  &nbsp;Create Invoice\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Enter invoice details here\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {choosenClient ?\r\n          <div className=\"client-details\">\r\n                    <div>\r\n                      <label>Name :</label>\r\n                      <p>{choosenClient.clientName}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>Email :</label>\r\n                      <p>{choosenClient.email}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>Phone :</label>\r\n                      <p>{choosenClient.phone}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>ABN :</label>\r\n                      <p>{choosenClient.ABN}</p>\r\n                    </div>\r\n            </div> : <></>}\r\n          \r\n          {listItems.length !== 0 ?\r\n            <ul className=\"list\">\r\n              {listItems.map((v, i) =>\r\n                <li key={i}>\r\n\r\n                <div className=\"details\">\r\n                  <div><b>{v.shortDescription}</b></div>\r\n                  <div>\r\n\r\n                      {v.longDescription} <b>( $ {v.price} )</b>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <i onClick={() => removeFromList(i)}\r\n                      className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              )}        \r\n            </ul> : <></>}\r\n                  <div className=\"contactform\" id=\"dvform\">\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"Select Client\">Invoice Service: </label>\r\n              <select onChange={(e) =>setServiceIndex(e.target.value) }\r\n                className=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\r\n                <option defaultValue>Please select invoice service</option>\r\n                        {servicesInfo.servicesList? <>\r\n                          {servicesInfo.servicesList.map((v, i) =>\r\n                            <option key={i} id={i} value={i}>{v.shortDescription}</option>\r\n                        )}\r\n                        </>\r\n                    : <></>}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"description\">Description: </label>\r\n                    <textarea onChange={(e) => setLongDescription(e.target.value)} value={longDescription}\r\n                      name=\"description\" id=\"description\" rows={10} placeholder=\"Enter description\" />\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"amount\">Amount: </label>\r\n                <input onChange={(e) => setPrice(e.target.value)} value={price}\r\n                  type=\"number\" name=\"amount\" id=\"amount\" placeholder=\"Enter Amount\" className=\"form_input required\" />\r\n                    </div>\r\n                    <input onClick={()=>addToList()} type=\"button\" id=\"add\" name=\"submit\" className=\"form_submit\" defaultValue=\"Add List Item\" />\r\n                    <button onClick={()=>submitHandler()} className='generate-inv-btn'>Generate Invoice</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n    );\r\n  }\r\nexport default InvoiceDetailsScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js",["130","131"],"// import { useHistory } from \"react-router-dom\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSettingsInfo, updateSettings } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction ConfigurationScreen(props) {\r\n  \r\n  const settingsInfo = useSelector((state) => state.settingsInfo);\r\n  const { settings } = settingsInfo;\r\n\r\n  \r\n  // console.log('Settings', settings);\r\n  \r\n  const [stripeKey, setStripeKey] = useState(settings.stripeKey);\r\n  const [invoiceFooter, setInvoiceFooter] = useState(settings.invoiceFooter);\r\n  const [emailTemplate, setEmailTemplate] = useState(settings.emailTemplate);\r\n  const [smsTemplate, setSmsTemplate] = useState(settings.smsTemplate);\r\n  \r\n  \r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   dispatch(getSettingsInfo());\r\n    \r\n  // }, [dispatch]);\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateSettings(stripeKey,invoiceFooter,emailTemplate,smsTemplate));\r\n  }\r\n    return (\r\n      <>\r\n        <Header />\r\n        {settingsInfo.settings ?\r\n\r\n          <div id=\"pages_maincontent\">\r\n            <h2 className=\"page_title page1\" >\r\n              <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n\r\n              <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                  &nbsp; Configuration\r\n                </h2>\r\n            <h3 id=\"dvResellerName\" >\r\n              Make changes here\r\n                </h3>\r\n            <div className=\"container-fluid1 container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 main123 \">\r\n                  <form onSubmit={(e)=>submitHandler(e)}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleInputEmail1\">Stripe Secret Key:</label>\r\n                      <input value={stripeKey} onChange={(e)=>setStripeKey(e.target.value)} type=\"key\" placeholder=\"Enter Stripe Secret Key\" className=\"input1\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    </div>\r\n                    {/* <div className=\"wrapper  wrapper1\" id=\"wrapper\">\r\n                      <label htmlFor=\"yes_no_radio\">GST Included</label>\r\n                      <div >\r\n                        <p >\r\n                          <input type=\"radio\" name=\"yes_no\" defaultChecked />Yes\r\n                            </p> &ensp;\r\n                            <p>\r\n                          <input type=\"radio\" name=\"yes_no\" />No\r\n                            </p>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"form-group from-group1\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">Invoice Footer:</label>\r\n                      <textarea value={invoiceFooter} onChange={(e) => setInvoiceFooter(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <div className=\"form-group from-group1\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">Email Template</label>\r\n                      <textarea value={emailTemplate} onChange={(e) => setEmailTemplate(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <div className=\"form-group from-group1\">\r\n                      <label style={{ marginTop: \"50px\" }} htmlFor=\"exampleFormControlTextarea1\">SMS Template</label>\r\n                      <textarea value={smsTemplate} onChange={(e) => setSmsTemplate(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"page_single layout_fullwidth_padding\">\r\n                 \r\n              <div className=\"contactform\" id=\"dvform\">\r\n                {/* Add form here */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : <></>}\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default ConfigurationScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js",["132","133"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js",["134","135","136"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js",["137","138","139","140","141","142"],"import Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { serverAddress } from \"../constants/dbConstants\";\r\nimport {\r\n    CLIENT_LIST_FAIL, CLIENT_LIST_REQUEST, CLIENT_LIST_SUCCESS,\r\n    CLIENT_SAVE_FAIL, CLIENT_SAVE_REQUEST, CLIENT_SAVE_SUCCESS,\r\n    INVOICE_LIST_FAIL, INVOICE_LIST_REQUEST, INVOICE_LIST_SUCCESS,\r\n    INVOICE_SAVE_FAIL, INVOICE_SAVE_REQUEST, INVOICE_SAVE_SUCCESS,\r\n    UPDATE_PAYMENT_REQUEST, UPDATE_PAYMENT_SUCCESS, UPDATE_PAYMENT_FAIL,\r\n    SERVICE_LIST_FAIL, SERVICE_LIST_REQUEST, SERVICE_LIST_SUCCESS,\r\n    SERVICE_SAVE_FAIL, SERVICE_SAVE_REQUEST, SETTINGS_INFO_REQUEST,\r\n    SETTINGS_INFO_SUCCESS, SETTINGS_INFO_FAIL, SETTINGS_SAVE_SUCCESS,\r\n    SETTINGS_SAVE_FAIL, SETTINGS_SAVE_REQUEST\r\n} from \"../constants/invoiceConstants\";\r\n\r\n\r\n// Client Actions\r\n \r\n// Get Existing Clients List\r\nexport const clientList = (userName, password) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients`, { companyId });\r\n        dispatch({\r\n            type: CLIENT_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n        localStorage.setItem('clientsInfo', JSON.stringify(data));\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Old Client\r\nexport const oldclient = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CLIENT_SAVE_SUCCESS,\r\n        payload: data,\r\n    });\r\n};\r\n\r\n// New Client\r\nexport const newclient = (clientName, companyName, email, address, phone, ABN ) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_SAVE_REQUEST,\r\n        payload: {\r\n            companyId,\r\n            clientName,\r\n            companyName,\r\n            email,\r\n            address,\r\n            phone,\r\n            ABN \r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients/create`, { companyId, clientName, companyName, email, address, phone, ABN });\r\n        console.log(\"client received==>\",data)\r\n        dispatch({\r\n            type: CLIENT_SAVE_SUCCESS,\r\n            payload: data.selectedClient[0],\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Edit Customer\r\nexport const editCustomer = (_id, clientName, companyName, email, address, phone, ABN ) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_SAVE_REQUEST,\r\n        payload: {\r\n            companyId,\r\n            _id,\r\n            clientName,\r\n            companyName,\r\n            email,\r\n            address,\r\n            phone,\r\n            ABN \r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients/update`, { companyId, _id, clientName, companyName, email, address, phone, ABN });\r\n        console.log(\"client received==>\",data)\r\n        dispatch({\r\n            type: CLIENT_SAVE_SUCCESS,\r\n            payload: data.selectedClient[0],\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n// Services\r\n\r\n// Get Existing Services List\r\nexport const serviceList = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SERVICE_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/services`, { companyId });\r\n        dispatch({\r\n            type: SERVICE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n//New Service\r\nexport const newservice = (shortDescription, longDescription, price) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SERVICE_SAVE_REQUEST,\r\n        payload: {\r\n            shortDescription,\r\n            longDescription,\r\n            price\r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/services/create`, { companyId, shortDescription, longDescription, price });\r\n\r\n        dispatch({\r\n            type: SERVICE_LIST_REQUEST,\r\n    });\r\n        try {\r\n            const { data } = await Axios.post(`${serverAddress}/api/services`, { companyId });\r\n            dispatch({\r\n                type: SERVICE_LIST_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: SERVICE_LIST_FAIL,\r\n                payload: err.response && err.response.data.message ?\r\n                    err.response.data.message : err.message,\r\n            });\r\n        }\r\n\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// New Invoice\r\nexport const newInvoice = (invoice) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    // console.log(\"invoice action\", invoice)\r\n    dispatch({\r\n        type: INVOICE_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices/new`, {\r\n            companyId: companyId,\r\n            clientName: invoice.clientName,\r\n            email: invoice.email,\r\n            phone: invoice.phone,\r\n            address: invoice.address,\r\n            ABN: invoice.ABN,\r\n            listItems: invoice.listItems,\r\n            totalAmount: invoice.totalAmount,\r\n            paidAmount: invoice.paidAmount,\r\n            balanceAmount: invoice.balanceAmount,\r\n        });\r\n        console.log(\"new invoice action\",invoice)\r\n        console.log('created Innvoice abc received ',data)\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"error\",err)\r\n        dispatch({\r\n            type: INVOICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Invoices List\r\nexport const invoiceList = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: INVOICE_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices`, { companyId });\r\n        dispatch({\r\n            type: INVOICE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: INVOICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Select Invoice\r\nexport const selectInvoice = (invoice) => async (dispatch) => {\r\n    console.log(\"select iv action==>\",invoice)\r\n    dispatch({\r\n        type: INVOICE_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: invoice,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: INVOICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Update Payment List\r\nexport const updatePaymentDetails = (_id, paymentList) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    console.log(\"invoice action\",companyId,_id, paymentList)\r\n    dispatch({\r\n        type: UPDATE_PAYMENT_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices/updatepayment`, {companyId, _id, paymentList });\r\n        // console.log(\"new invoice action\",invoice)\r\n        console.log('updatwed Innvoice payement ',data)\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"error\",err)\r\n        dispatch({\r\n            type: UPDATE_PAYMENT_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Settings Info\r\nexport const getSettingsInfo = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SETTINGS_INFO_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/settings`, { companyId });\r\n        dispatch({\r\n            type: SETTINGS_INFO_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// // Update Settings\r\nexport const updateSettings = (stripeKey, invoiceFooter, emailTemplate, smsTemplate) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    // console.log(\"invoice action\", invoice)\r\n    dispatch({\r\n        type: SETTINGS_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/settings/update`, { companyId,stripeKey,invoiceFooter,emailTemplate,smsTemplate });\r\n        dispatch({\r\n            type: SETTINGS_INFO_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js",["143","144","145","146"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\emailActions.js",["147","148","149","150"],"import Axios from \"axios\";\r\nimport { serverAddress } from \"../constants/dbConstants\";\r\nimport { EMAIL_SEND_FAIL, EMAIL_SEND_REQUEST, EMAIL_SEND_SUCCESS } from \"../constants/emailConstants\";\r\n\r\nexport const sendEmailBackend = (receiver, message) => async (dispatch) => {\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/email`, { receiver, message });\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_REQUEST,\r\n        //     payload: data,\r\n        // });\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_SUCCESS,\r\n        //     payload: data,\r\n        // });\r\n     } catch (err) {\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_FAIL,\r\n        //     payload: err.response && err.response.data.message ?\r\n        //         err.response.data.message : err.message,\r\n        // });\r\n    }\r\n};\r\n\r\n","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\emailConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripePayment\\StripePayment.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CustomersScreen.js",["151","152","153"],"import { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { clientList, invoiceList, oldclient, selectInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\nimport { selectedInvoiceReducer } from \"../reducers/invoiceReducers\";\r\n\r\nfunction CustomersScreen(props) {\r\n  const [selectedClient, setSelectedClient] = useState({});\r\n  const [editFlag, setEditFlag] = useState(false);\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;  \r\n  \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(clientList());\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo ) {\r\n      props.history.push('/');\r\n    }\r\n  }, [props.history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (editFlag) {\r\n      dispatch(oldclient(selectedClient));\r\n      props.history.push('/customers/edit');\r\n    }\r\n    setEditFlag(false);\r\n  }, [dispatch, props.history, selectedClient,editFlag]);\r\n\r\n  const clientsInfo = useSelector((state) => state.clientInfo.clientsList);\r\n  const editCustomer = (index) => {\r\n    setSelectedClient(clientsInfo.clients[index]);\r\n\r\n  }\r\n\r\n  return (\r\n      <>\r\n      <Header />\r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i class=\"fas fa-users\"></i>\r\n                  &nbsp;Customers\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Customers list\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {clientsInfo ?\r\n            <ul className=\"list\">\r\n              {clientsInfo.clients.map((v, i) =>\r\n                <li key={i}>\r\n                  <div className=\"details\">\r\n                    <div><b>{v.clientName}</b></div>\r\n                    <div>\r\n                      <span className=\"first\">\r\n                        {v.email}\r\n                      </span>\r\n                      <span>\r\n                        {v.phone}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"actions\">\r\n                    <i onClick={() => { editCustomer(i); setEditFlag(true); }} className=\"fas fa-user-edit\" aria-hidden=\"true\" />\r\n                  </div>\r\n                </li>\r\n              )}\r\n                    \r\n            </ul> : <></>}\r\n                </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n    export default CustomersScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\EditCustomersScreen.js",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":11,"column":10,"nodeType":"160","messageId":"161","endLine":11,"endColumn":26},{"ruleId":"158","severity":1,"message":"162","line":11,"column":28,"nodeType":"160","messageId":"161","endLine":11,"endColumn":47},{"ruleId":"163","severity":1,"message":"164","line":71,"column":19,"nodeType":"160","endLine":71,"endColumn":34},{"ruleId":"163","severity":1,"message":"164","line":77,"column":19,"nodeType":"160","endLine":77,"endColumn":34},{"ruleId":"158","severity":1,"message":"165","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":19},{"ruleId":"158","severity":1,"message":"166","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":25},{"ruleId":"158","severity":1,"message":"167","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":32},{"ruleId":"158","severity":1,"message":"168","line":44,"column":9,"nodeType":"160","messageId":"161","endLine":44,"endColumn":22},{"ruleId":"158","severity":1,"message":"169","line":1,"column":319,"nodeType":"160","messageId":"161","endLine":1,"endColumn":336},{"ruleId":"158","severity":1,"message":"170","line":1,"column":338,"nodeType":"160","messageId":"161","endLine":1,"endColumn":358},{"ruleId":"158","severity":1,"message":"171","line":1,"column":360,"nodeType":"160","messageId":"161","endLine":1,"endColumn":380},{"ruleId":"158","severity":1,"message":"172","line":2,"column":10,"nodeType":"160","messageId":"161","endLine":2,"endColumn":21},{"ruleId":"158","severity":1,"message":"173","line":9,"column":29,"nodeType":"160","messageId":"161","endLine":9,"endColumn":51},{"ruleId":"158","severity":1,"message":"174","line":12,"column":28,"nodeType":"160","messageId":"161","endLine":12,"endColumn":46},{"ruleId":"158","severity":1,"message":"175","line":12,"column":48,"nodeType":"160","messageId":"161","endLine":12,"endColumn":69},{"ruleId":"158","severity":1,"message":"176","line":13,"column":5,"nodeType":"160","messageId":"161","endLine":13,"endColumn":23},{"ruleId":"158","severity":1,"message":"177","line":163,"column":17,"nodeType":"160","messageId":"161","endLine":163,"endColumn":21},{"ruleId":"158","severity":1,"message":"178","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":14},{"ruleId":"158","severity":1,"message":"179","line":6,"column":8,"nodeType":"160","messageId":"161","endLine":6,"endColumn":13},{"ruleId":"158","severity":1,"message":"180","line":8,"column":10,"nodeType":"160","messageId":"161","endLine":8,"endColumn":25},{"ruleId":"158","severity":1,"message":"181","line":29,"column":10,"nodeType":"160","messageId":"161","endLine":29,"endColumn":17},{"ruleId":"158","severity":1,"message":"182","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":25},{"ruleId":"158","severity":1,"message":"183","line":3,"column":27,"nodeType":"160","messageId":"161","endLine":3,"endColumn":45},{"ruleId":"158","severity":1,"message":"184","line":3,"column":47,"nodeType":"160","messageId":"161","endLine":3,"endColumn":65},{"ruleId":"158","severity":1,"message":"177","line":7,"column":17,"nodeType":"160","messageId":"161","endLine":7,"endColumn":21},{"ruleId":"158","severity":1,"message":"185","line":3,"column":22,"nodeType":"160","messageId":"161","endLine":3,"endColumn":33},{"ruleId":"158","severity":1,"message":"186","line":3,"column":46,"nodeType":"160","messageId":"161","endLine":3,"endColumn":59},{"ruleId":"158","severity":1,"message":"167","line":5,"column":10,"nodeType":"160","messageId":"161","endLine":5,"endColumn":32},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'shortDescription' is assigned a value but never used.","Identifier","unusedVar","'setShortDescription' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'tempService' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useEffect' is defined but never used.","'getSettingsInfo' is defined but never used.","'selectedInvoiceReducer' is defined but never used.","'deleteInvoice' is assigned a value but never used.","'SERVICE_SAVE_FAIL' is defined but never used.","'SERVICE_SAVE_REQUEST' is defined but never used.","'SERVICE_SAVE_SUCCESS' is defined but never used.","'useSelector' is defined but never used.","'UPDATE_PAYMENT_SUCCESS' is defined but never used.","'SETTINGS_INFO_FAIL' is defined but never used.","'SETTINGS_SAVE_SUCCESS' is defined but never used.","'SETTINGS_SAVE_FAIL' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'Modal' is defined but never used.","'settingsReducer' is defined but never used.","'payDate' is assigned a value but never used.","'EMAIL_SEND_FAIL' is defined but never used.","'EMAIL_SEND_REQUEST' is defined but never used.","'EMAIL_SEND_SUCCESS' is defined but never used.","'invoiceList' is defined but never used.","'selectInvoice' is defined but never used.","no-global-assign","no-unsafe-negation"]