[{"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js":"1","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js":"2","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js":"3","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js":"4","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js":"5","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js":"6","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js":"7","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js":"8","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js":"9","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js":"10","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js":"11","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js":"12","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js":"13","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js":"14","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js":"15","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js":"16","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js":"17","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js":"18","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js":"19","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js":"20","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js":"21","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js":"22","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js":"23","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js":"24","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\emailActions.js":"25","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\emailConstants.js":"26","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripePayment\\StripePayment.js":"27","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CustomersScreen.js":"28","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\EditCustomersScreen.js":"29"},{"size":617,"mtime":1614052918248,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1611774201000,"results":"32","hashOfConfig":"31"},{"size":355,"mtime":1614242189605,"results":"33","hashOfConfig":"31"},{"size":1619,"mtime":1615346043450,"results":"34","hashOfConfig":"31"},{"size":6000,"mtime":1615169762647,"results":"35","hashOfConfig":"31"},{"size":4376,"mtime":1615169427364,"results":"36","hashOfConfig":"31"},{"size":2362,"mtime":1614311242204,"results":"37","hashOfConfig":"31"},{"size":2036,"mtime":1615274449788,"results":"38","hashOfConfig":"31"},{"size":7746,"mtime":1615262066512,"results":"39","hashOfConfig":"31"},{"size":4415,"mtime":1615169404106,"results":"40","hashOfConfig":"31"},{"size":6350,"mtime":1615169421334,"results":"41","hashOfConfig":"31"},{"size":1268,"mtime":1614835061666,"results":"42","hashOfConfig":"31"},{"size":635,"mtime":1614053213717,"results":"43","hashOfConfig":"31"},{"size":214,"mtime":1614053398888,"results":"44","hashOfConfig":"31"},{"size":119,"mtime":1615342259584,"results":"45","hashOfConfig":"31"},{"size":2009,"mtime":1614056911960,"results":"46","hashOfConfig":"31"},{"size":190,"mtime":1608907475781,"results":"47","hashOfConfig":"31"},{"size":187,"mtime":1607771183599,"results":"48","hashOfConfig":"31"},{"size":5117,"mtime":1615268540999,"results":"49","hashOfConfig":"31"},{"size":1619,"mtime":1615264018857,"results":"50","hashOfConfig":"31"},{"size":11431,"mtime":1615347864124,"results":"51","hashOfConfig":"31"},{"size":20729,"mtime":1615273280404,"results":"52","hashOfConfig":"31"},{"size":406,"mtime":1614911174714,"results":"53","hashOfConfig":"31"},{"size":1598,"mtime":1614315326603,"results":"54","hashOfConfig":"31"},{"size":846,"mtime":1615186965266,"results":"55","hashOfConfig":"31"},{"size":163,"mtime":1615186636916,"results":"56","hashOfConfig":"31"},{"size":485,"mtime":1615273405092,"results":"57","hashOfConfig":"31"},{"size":2246,"mtime":1615346978455,"results":"58","hashOfConfig":"31"},{"size":4368,"mtime":1615347926021,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"556jn6",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js",[],["124","125"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js",["126","127","128","129"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { serviceList, newInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction InvoiceDetailsScreen(props) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;  \r\n  // const [services, setServices] = useState([]);\r\n\r\n  const [shortDescription, setShortDescription] = useState('');\r\n  const [longDescription, setLongDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const [serviceIndex, setServiceIndex] = useState();\r\n  // const [invoice, setInvoice] = useState({});\r\n  const [selectedService, setSelectedService] = useState({\r\n    shortDescription: '',\r\n    longDescription: '',\r\n    price: 0,\r\n    itemNumber:0\r\n  });\r\n  let tempService = {};\r\n  const [itemNumber, setItemNumber] = useState(0);\r\n  const [listItems, setListItems] = useState([]);\r\n  const servicesInfo = useSelector((state) => state.serviceInfo);\r\n  if (servicesInfo.servicesList) {\r\n    // console.log(\"services\", servicesInfo.servicesList)\r\n    // setServices(servicesInfo.servicesList);\r\n  }\r\n\r\n  const selectedClient = useSelector((state) => state.choosenClientInfo);\r\n  const { choosenClient } = selectedClient;    \r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      props.history.push('/');\r\n    }\r\n  }, [props.history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(serviceList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedClient) {\r\n      props.history.push('/create');\r\n    }\r\n  }, [props.history, selectedClient]);\r\n\r\n  useEffect(() => {\r\n    if (servicesInfo.servicesList) {\r\n      setSelectedService(servicesInfo.servicesList[serviceIndex]);\r\n    }\r\n          // setLongDescription(selectedService.longDescription);\r\n    // console.log(\"serv\", selectedService);\r\n\r\n  }, [serviceIndex, servicesInfo]);\r\n  \r\n  useEffect(() => {\r\n    if (selectedService) {\r\n      setLongDescription(selectedService.longDescription);\r\n      setPrice(selectedService.price)\r\n      console.log(\"serv\", selectedService);\r\n    }\r\n\r\n  }, [serviceIndex,selectedService])\r\n  useEffect(() => {\r\n    tempService = selectedService;\r\n    tempService.longDescription = longDescription;\r\n    setSelectedService(tempService)\r\n  }, [longDescription]);\r\n\r\n  useEffect(() => {\r\n    tempService = selectedService;\r\n    tempService.price = price;\r\n    setSelectedService(tempService)\r\n  }, [price]);\r\n\r\n  const addToList = () => {\r\n    setItemNumber(itemNumber+1)\r\n    const tempService = servicesInfo.servicesList[serviceIndex];\r\n    setListItems(prevArray => [...prevArray, {\r\n      shortDescription: tempService.shortDescription,\r\n      longDescription: tempService.longDescription,\r\n      price: tempService.price,\r\n      itemNumber: itemNumber\r\n    }]);\r\n  }\r\n\r\n  // console.log(selectedService);\r\n  // const addToList = () => {\r\n  //   setListItems(prevArray => [...prevArray, selectedService]);\r\n  // }\r\n\r\n  const removeFromList = (index) => {\r\n    const removedItem = listItems.splice(index,1);\r\n    setListItems(listItems.filter(x=>x.itemNumber!==removedItem[0].itemNumber));\r\n    // const tempList = listItems;\r\n    // const newList = delete tempList[index];\r\n    console.log(removedItem);\r\n\r\n  }\r\n  console.log(\"list items\",listItems)\r\n  const submitHandler = () => {\r\n    const totalAmount = listItems.reduce((prev, next) => prev + next.price, 0);\r\n\r\n    const generatedInvoice = {\r\n      clientName: choosenClient.clientName,\r\n      email: choosenClient.email,\r\n      phone: choosenClient.phone,\r\n      address: choosenClient.address,\r\n      ABN: choosenClient.ABN,\r\n      listItems: listItems,\r\n      totalAmount: totalAmount,\r\n      paidAmount: 0,\r\n      balanceAmount: totalAmount,\r\n    };\r\n    dispatch(newInvoice(generatedInvoice));\r\n\r\n    props.history.push('/generate');\r\n  }\r\n    return (\r\n      <>\r\n        <Header />\r\n      \r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n                  &nbsp;Create Invoice\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Enter invoice details here\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {choosenClient ?\r\n          <div className=\"client-details\">\r\n                    <div>\r\n                      <label>Name :</label>\r\n                      <p>{choosenClient.clientName}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>Email :</label>\r\n                      <p>{choosenClient.email}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>Phone :</label>\r\n                      <p>{choosenClient.phone}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>ABN :</label>\r\n                      <p>{choosenClient.ABN}</p>\r\n                    </div>\r\n            </div> : <></>}\r\n          \r\n          {listItems.length !== 0 ?\r\n            <ul className=\"list\">\r\n              {listItems.map((v, i) =>\r\n                <li key={i}>\r\n\r\n                <div className=\"details\">\r\n                  <div><b>{v.shortDescription}</b></div>\r\n                  <div>\r\n\r\n                      {v.longDescription} <b>( $ {v.price} )</b>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <i onClick={() => removeFromList(i)}\r\n                      className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              )}        \r\n            </ul> : <></>}\r\n                  <div className=\"contactform\" id=\"dvform\">\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"Select Client\">Invoice Service: </label>\r\n              <select onChange={(e) =>setServiceIndex(e.target.value) }\r\n                className=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\r\n                <option defaultValue>Please select invoice service</option>\r\n                        {servicesInfo.servicesList? <>\r\n                          {servicesInfo.servicesList.map((v, i) =>\r\n                            <option key={i} id={i} value={i}>{v.shortDescription}</option>\r\n                        )}\r\n                        </>\r\n                    : <></>}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"description\">Description: </label>\r\n                    <textarea onChange={(e) => setLongDescription(e.target.value)} value={longDescription}\r\n                      name=\"description\" id=\"description\" rows={10} placeholder=\"Enter description\" />\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"amount\">Amount: </label>\r\n                <input onChange={(e) => setPrice(e.target.value)} value={price}\r\n                  type=\"number\" name=\"amount\" id=\"amount\" placeholder=\"Enter Amount\" className=\"form_input required\" />\r\n                    </div>\r\n                    <input onClick={()=>addToList()} type=\"button\" id=\"add\" name=\"submit\" className=\"form_submit\" defaultValue=\"Add List Item\" />\r\n                    <button onClick={()=>submitHandler()} className='generate-inv-btn'>Generate Invoice</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n    );\r\n  }\r\nexport default InvoiceDetailsScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js",["130","131"],"// import { useHistory } from \"react-router-dom\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSettingsInfo, updateSettings } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction ConfigurationScreen(props) {\r\n  \r\n  const settingsInfo = useSelector((state) => state.settingsInfo);\r\n  const { settings } = settingsInfo;\r\n\r\n  \r\n  // console.log('Settings', settings);\r\n  \r\n  const [stripeKey, setStripeKey] = useState(settings.stripeKey);\r\n  const [invoiceFooter, setInvoiceFooter] = useState(settings.invoiceFooter);\r\n  const [emailTemplate, setEmailTemplate] = useState(settings.emailTemplate);\r\n  const [smsTemplate, setSmsTemplate] = useState(settings.smsTemplate);\r\n  \r\n  \r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   dispatch(getSettingsInfo());\r\n    \r\n  // }, [dispatch]);\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateSettings(stripeKey,invoiceFooter,emailTemplate,smsTemplate));\r\n  }\r\n    return (\r\n      <>\r\n        <Header />\r\n        {settingsInfo.settings ?\r\n\r\n          <div id=\"pages_maincontent\">\r\n            <h2 className=\"page_title page1\" >\r\n              <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n\r\n              <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                  &nbsp; Configuration\r\n                </h2>\r\n            <h3 id=\"dvResellerName\" >\r\n              Make changes here\r\n                </h3>\r\n            <div className=\"container-fluid1 container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 main123 \">\r\n                  <form onSubmit={(e)=>submitHandler(e)}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleInputEmail1\">Stripe Secret Key:</label>\r\n                      <input value={stripeKey} onChange={(e)=>setStripeKey(e.target.value)} type=\"key\" placeholder=\"Enter Stripe Secret Key\" className=\"input1\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    </div>\r\n                    {/* <div className=\"wrapper  wrapper1\" id=\"wrapper\">\r\n                      <label htmlFor=\"yes_no_radio\">GST Included</label>\r\n                      <div >\r\n                        <p >\r\n                          <input type=\"radio\" name=\"yes_no\" defaultChecked />Yes\r\n                            </p> &ensp;\r\n                            <p>\r\n                          <input type=\"radio\" name=\"yes_no\" />No\r\n                            </p>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"form-group from-group1\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">Invoice Footer:</label>\r\n                      <textarea value={invoiceFooter} onChange={(e) => setInvoiceFooter(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <div className=\"form-group from-group1\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">Email Template</label>\r\n                      <textarea value={emailTemplate} onChange={(e) => setEmailTemplate(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <div className=\"form-group from-group1\">\r\n                      <label style={{ marginTop: \"50px\" }} htmlFor=\"exampleFormControlTextarea1\">SMS Template</label>\r\n                      <textarea value={smsTemplate} onChange={(e) => setSmsTemplate(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"page_single layout_fullwidth_padding\">\r\n                 \r\n              <div className=\"contactform\" id=\"dvform\">\r\n                {/* Add form here */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : <></>}\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default ConfigurationScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js",["132","133","134"],"import { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { invoiceList, selectInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\nimport { selectedInvoiceReducer } from \"../reducers/invoiceReducers\";\r\n\r\nfunction InvoicesScreen(props) {\r\n  const [selectedInvoice, setSelectedInvoice] = useState({});\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(invoiceList());\r\n    // const clients = useSelector((state) => state.clients);\r\n\r\n  }, [dispatch]);\r\n\r\n  const invoicesListInfo = useSelector((state) => state.invoicesListInfo);\r\n  console.log('invoice list', invoicesListInfo);\r\n\r\n  const getSelectedInvoice = useSelector((state) => state.invoiceInfo);\r\n  // console.log(getSelectedInvoice)\r\n\r\n  \r\n  const chooseInvoice = (index) => {\r\n    setSelectedInvoice(invoicesListInfo.invoicesList[index]);\r\n    // console.log(\"select\",invoicesListInfo.invoicesList[index])\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(selectInvoice(selectedInvoice));\r\n    // console.log(\"selected inv==>\", selectedInvoice);\r\n\r\n  }, [dispatch, selectedInvoice]);\r\n  const [invoiceClick, setInvoiceClick] = useState(false);\r\n  useEffect(() => {\r\n    if (invoiceClick) {\r\n      if (getSelectedInvoice.selectedInvoice) {\r\n        props.history.push('/generate');\r\n        setInvoiceClick(false);\r\n      }\r\n    }\r\n    // console.log(\"selected inv==>\", selectedInvoice);\r\n\r\n  }, [dispatch, getSelectedInvoice,invoiceClick, props.history]);\r\n  const deleteInvoice = () => {\r\n    // Next task\r\n  }\r\n\r\n  const editInvoice = () => {\r\n    // Next task\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n      <Header />\r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i className=\"fa fa-bars\" aria-hidden=\"true\" />\r\n                  &nbsp;Invoices\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Invoice list\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {invoicesListInfo.invoicesList ?\r\n            <ul className=\"list\">\r\n              {invoicesListInfo.invoicesList.map((v, i) =>\r\n                <li onClick={() => { chooseInvoice(i);setInvoiceClick(true) }} key={i}>\r\n                  {/* <div>\r\n                    <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                  </div> */}\r\n                  <div className=\"details\">\r\n                    <div><b>{v.clientName}</b></div>\r\n                    <div>\r\n                      <span className=\"first\">\r\n                        {v.phone}\r\n                      </span>\r\n                      <span>\r\n                        {v.ABN}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                  {/* <div className=\"actions\">\r\n                    <i onClick={() => editInvoice()} className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                    <i onClick={() => deleteInvoice()} className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                  </div> */}\r\n                </li>\r\n              )}\r\n                    \r\n              {/* <li>\r\n                <div>\r\n                  <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                  <div><b>Invoice Number 2</b></div>\r\n                  <div>\r\n                    <span className=\"first\">\r\n                      Phone\r\n                          </span>\r\n                    <span>\r\n                      ABN\r\n                          </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div>\r\n                  <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                  <div><b>Invoice Number 3</b></div>\r\n                  <div>\r\n                    <span className=\"first\">\r\n                      Phone\r\n                          </span>\r\n                    <span>\r\n                      ABN\r\n                          </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div>\r\n                  <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                  <div><b>Invoice Number 4</b></div>\r\n                  <div>\r\n                    <span className=\"first\">\r\n                      Phone\r\n                          </span>\r\n                    <span>\r\n                      ABN\r\n                          </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div>\r\n                  <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                  <div><b>Invoice Number 5</b></div>\r\n                  <div>\r\n                    <span className=\"first\">\r\n                      Phone\r\n                          </span>\r\n                    <span>\r\n                      ABN\r\n                          </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li> */}\r\n            </ul> : <></>}\r\n                </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n    export default InvoicesScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js",["135","136","137","138"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js",["139","140","141","142","143","144"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js",["145","146","147","148"],"\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BitlyClient } from 'bitly-react';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport './style.css';\r\nimport { settingsReducer } from '../../reducers/invoiceReducers';\r\nimport { sendEmailBackend } from '../../actions/emailActions';\r\nimport { updatePaymentDetails } from '../../actions/invoiceActions';\r\nimport StripePayment from '../../components/StripePayment/StripePayment';\r\n\r\nfunction GenerateInvoice() {\r\n  const [smsModal, setSmsModal] = useState(false);\r\n  const [emailModal, setEmailModal] = useState(false);\r\n  const [paymentModal, setPaymentModal] = useState(false);\r\n  const [bitlyUrl, setBitlyUrl] = useState('');\r\n  const invoice = useSelector(state => state.invoiceInfo);\r\n  const settings = useSelector(state => state.settingsInfo.settings);\r\n  // if (invoice.selectedInvoice) {\r\n    //   console.log(\"generate invoice\", invoice.selectedInvoice);\r\n    // }\r\n  const [emailTemplate, setEmailTemplate] = useState(settings.emailTemplate);  \r\n  const [smsTemplate, setSmsTemplate] = useState(settings.smsTemplate);\r\n\r\n  const [paymentList, setPaymentList] = useState([]);\r\n  const [payMethod, setPayMethod] = useState('');\r\n  const [payValue, setPayValue] = useState('');\r\n  const [payDate, setPayDate] = useState('');\r\n  const [stripePayment, SetStripePayment] = useState('')\r\n  const dispatch = useDispatch();\r\n\r\n  let gst = 0;\r\n  let totalPrice = 0;\r\n  if (invoice.selectedInvoice) {\r\n    totalPrice = invoice.selectedInvoice.listItems.reduce((prev, next) => prev + next.price, 0);\r\n    gst = totalPrice / 11;\r\n  }\r\n  let paidAmount = paymentList.reduce((prev, next) => prev + next.payValue, 0);\r\n  console.log('paid =>',paidAmount)\r\n  \r\n  const foot = settings.invoiceFooter;\r\n  const bitly = new BitlyClient('930b46de2b827c05809757b390d38b7ed5d5613b', {});\r\n  const generateUrl = async () => {\r\n    let result;\r\n    try {\r\n      result = await bitly.shorten('https://google.com');\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n    console.log(result);\r\n    setBitlyUrl(result.url);\r\n    return result;\r\n\r\n  }\r\n\r\n  const copyUrl = () => {\r\n    navigator.clipboard.writeText(bitlyUrl);\r\n    var tooltip = document.getElementById(\"myTooltip\");\r\n  tooltip.innerHTML = \"Copied !\";\r\n\r\n  }\r\n\r\n  const outFunc = () => {\r\n      var tooltip = document.getElementById(\"myTooltip\");\r\n      tooltip.innerHTML = \"Copy to clipboard\";\r\n  }\r\n\r\n  const updatePayment = () => {\r\n    const date = GetFormattedDate();\r\n    setPayDate(date)\r\n    setPaymentList(oldArray => [...oldArray, { payMethod, payValue, date }]);\r\n    setPayValue('');\r\n    \r\n\r\n    dispatch(updatePaymentDetails(payMethod, payValue, date));\r\n  };\r\n\r\n  const GetFormattedDate=()=> {\r\n    var todayTime = new Date();\r\n    var month = todayTime.getMonth()+1;\r\n    var day = todayTime.getDate();\r\n    var year = todayTime.getFullYear();\r\n    var hours = todayTime.getHours();\r\n    var minutes = todayTime.getMinutes();\r\n    var ampm = hours >= 12 ? 'pm' : 'am';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12; // the hour '0' should be '12'\r\n    minutes = minutes < 10 ? '0'+minutes : minutes;\r\n    var strTime = hours + ':' + minutes + ' ' + ampm;\r\n    return day + \"/\" + month + \"/\" + year + \" , \" + strTime;\r\n  }\r\n\r\n  const receiver = 'shayanali4@live.com';\r\n\r\n  const sendEmail = () => {\r\n    dispatch(sendEmailBackend(receiver,emailTemplate));\r\n  }\r\n  console.log('pay==>',paymentList);\r\n    return (\r\n\r\n            \r\n  \r\n          <div id=\"ctl04_dvpanel\" className=\"container-fluid tab-pane\" >\r\n        <div className=\"second\" >\r\n          {invoice.selectedInvoice ?\r\n\r\n            <div className=\"dvMainInvoice\" >\r\n              <section id=\"memo\">\r\n                <div >\r\n                  <img src=\"https://onlinepayment.webnapp.com.au/img/logo.jpeg\" id=\"ctl04_logo\" alt=\"logo\" />\r\n                </div>\r\n                <div className=\"second\">\r\n                  <span >Email: <span id=\"ctl04_lblCompanyEmail\">aussiesmarketplace@gmail.com</span></span><br />\r\n                  <span >Phone: <span id=\"ctl04_lblCompanyPhone\">0430496430</span></span><br />\r\n                  <span >ABN: <span id=\"ctl04_lblCompanyABN\">31251544956</span></span><br />\r\n                </div>\r\n              </section>\r\n              <hr />\r\n              <div className=\"clearfix\" />\r\n              <section className=\"invoice-section section\" style={{ marginTop: '0px', display: 'inline-block', float: 'left', padding: '7px' }}>\r\n                <div className=\"first\"  >Invoice</div>\r\n                <div className=\"second\"><span >Date: <span id=\"ctl04_lblDate\">12/02/2021</span></span></div>\r\n                <div><span className=\"second\" >Invoice No: <span id=\"ctl04_lblOrderNo\">{invoice.selectedInvoice.invoiceNumber}</span></span></div>\r\n              </section>\r\n              <section className=\"invoice-section section1\" >\r\n                {invoice.selectedInvoice ?\r\n                  <div >\r\n                    <span className=\"first\" ><b>Customer Details</b></span><br />\r\n                    <span className=\"second\" style={{ display: 'inline-block', minWidth: '30px' }}>\r\n                      <b>Name: <span id=\"ctl04_lblClientName\">\r\n                        {invoice.selectedInvoice.clientName}\r\n                      </span>\r\n                      </b>\r\n                    </span>\r\n                    <br />\r\n                    <span className=\"second\">Email:\r\n                  <span id=\"ctl04_lblClientEmail\">\r\n                        {invoice.selectedInvoice.email}\r\n                      </span>\r\n                    </span>\r\n                    <br />\r\n                    <span className=\"second\" >Phone:\r\n                  <span id=\"ctl04_lblClientPhone\">\r\n                        {invoice.selectedInvoice.phone}\r\n                      </span>\r\n                    </span>\r\n                    <br />\r\n                    <span className=\"second\" >ABN:\r\n                  <span id=\"ctl04_lblClientABN\">\r\n                        {invoice.selectedInvoice.ABN}\r\n                      </span>\r\n                    </span>\r\n                    <br />\r\n                  </div> : <></>}\r\n              </section>\r\n              <div className=\"clearfix\" />\r\n\r\n\r\n              <div className=\"below\">\r\n                <div >\r\n                  <span id=\"ctl04_lblGST\" style={{ paddingLeft: '20px' }}>GST is included in the quote* </span>\r\n                  <span>    prices are in AUD</span>\r\n                </div>\r\n              </div>\r\n              <section className=\"items\">\r\n                {/* {invoice.selectedInvoice.servicesList} */}\r\n                <table id=\"tblSearch\" className=\"table table-hover nowrap\">\r\n                  <thead style={{ backgroundColor: \"#00CED1\" }} >\r\n                    <tr>\r\n                      <th className=\"first\" style={{ width: '75%' }}><div style={{ textAlign: 'left' }}>Description</div></th>\r\n                      <th className=\"second\" style={{ width: '25%' }}><div style={{ textAlign: 'right' }}>Price</div></th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {invoice.selectedInvoice.listItems.map((v, i) =>\r\n                      <tr key={i}>\r\n                        <td className=\"first\">{v.longDescription}</td>\r\n                        <td className=\"second\" >${v.price}</td>\r\n                      </tr>\r\n                    )}\r\n\r\n                  </tbody>\r\n                </table>\r\n              </section>\r\n\r\n\r\n              <section className=\"sums\" >\r\n                <div className=\"row\">\r\n\r\n\r\n\r\n\r\n\r\n                  <div className=\"col-md-6\">\r\n                    <table className=\"first1 \" >\r\n                      <tbody className=\" mob\"  >\r\n                        <tr className=\"amount-total  mob\">\r\n                          <td className=\"second\" >Total: $<span id=\"ctl04_lblTotalAmount\">{totalPrice}</span></td>\r\n                      </tr>\r\n                        <tr id=\"ctl04_gstpanel\" className=\"amount-total\">\r\n                          <td className=\"second\">GST: $<span id=\"ctl04_lblGSTAmount\">{gst.toFixed(2)}</span></td>\r\n                        </tr>\r\n                        \r\n                        <tr className=\"amount-total\">\r\n                          <td className=\"second\">Amount Paid: $<span id=\"ctl04_lblPaidAmount\">0.00</span></td>\r\n                        </tr>\r\n                        <tr className=\"amount-total\">\r\n                          <td className=\"second\">Balance Amount: $<span id=\"ctl04_lblBalanceAmount\">{totalPrice}</span></td>\r\n                        </tr>\r\n                      </tbody></table>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"payment-info\" dangerouslySetInnerHTML={{__html: foot}} />\r\n\r\n                  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                  {/* <div className=\"col\">\r\n                  <div id=\"dvFooter\" >\r\n                    </div>\r\n                </div> */}\r\n              \r\n                </div>\r\n              </section>\r\n              <br />\r\n              <section>\r\n                <div className=\"paywithstripe\">\r\n                  <p>Would you like to pay using your Debit/Credit Card?</p>\r\n                  <span>\r\n                    <input onChange={(e)=>SetStripePayment(e.target.value)} id=\"pay-yes\" type=\"radio\" name=\"pay-now\" value='yes' />\r\n                    <label htmlFor=\"pay-yes\">Yes</label>\r\n                  </span>\r\n                  <span>\r\n                    <input onChange={(e)=>SetStripePayment(e.target.value)} id=\"pay-no\" type=\"radio\" name=\"pay-now\" value='no' />\r\n                    <label htmlFor=\"pay-no\">No</label>\r\n                  </span>\r\n                </div>\r\n                {stripePayment === 'yes' ?\r\n                  <StripePayment name={invoice.selectedInvoice.clientName}\r\n                  amount={totalPrice} email={invoice.selectedInvoice.email} /> : <></>}\r\n              </section>\r\n              <br />\r\n              <section className=\"admin-use\">\r\n                <h4>For Admin Use Only</h4>\r\n                <p>Send directly to your customer</p>\r\n                <div className=\"send\">\r\n                  {/* <button type=\"button\" data-toggle=\"modal\" data-target=\"#exampleModalCenter\">Send Email</button>\r\n                  <button>Send SMS</button> */}\r\n                  <button onClick={()=>setSmsModal(true)} type=\"button\" className=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#smsModal\">Send SMS</button>\r\n                  <button onClick={()=>setEmailModal(true)} type=\"button\" className=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#emailModal\">Send Email</button>\r\n                  <button onClick={()=>setPaymentModal(true)} type=\"button\" className=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#paymentModal\">Received Payment</button>\r\n\r\n                </div>\r\n\r\n                {/*SMS Modal */}\r\n                <div id=\"smsModal\" className={`modal ${smsModal?'show':''}`}>\r\n\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <span onClick={()=>setSmsModal(false)} className=\"close\">&times;</span>\r\n                            <h2>Send SMS</h2>\r\n                        </div>\r\n                    <div className=\"modal-body\">\r\n                      <div className='bitly'>\r\n                        <p><b>Bitly Url :</b></p>\r\n                        {bitlyUrl === '' ?\r\n                          <button onClick={() => generateUrl()}>Generate Url</button> :\r\n                          <div className=\"tooltip\">\r\n                            <p>{bitlyUrl}</p>\r\n                            <button onClick={() => copyUrl()} onMouseOut={()=>outFunc()}>\r\n                              <span className=\"tooltiptext\" id=\"myTooltip\">\r\n                                Copy to clipboard\r\n                                </span>\r\n                                Copy\r\n                                </button>\r\n                          </div>}\r\n                      </div>\r\n                      {bitlyUrl !== '' ?\r\n                        <div className=\"message\">\r\n                          <p><b>Enter your message :</b></p>\r\n                          <textarea value={`${smsTemplate} \\n\\nHere is the download link : ${bitlyUrl}`} onChange={(e) => setSmsTemplate(e.target.value)} placeholder='Enter Message'></textarea>\r\n                        </div> :<></>}\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                      {/* <h3>Modal Footer</h3> */}\r\n                      <button>Send</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {/*Email Modal */}\r\n                <div id=\"emailModal\" className={`modal ${emailModal?'show':''}`}>\r\n\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <span onClick={()=>setEmailModal(false)} className=\"close\">&times;</span>\r\n                            <h2>Send Email</h2>\r\n                        </div>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"message\">\r\n                        <p><b>Enter Message :</b></p>\r\n                        <textarea value={emailTemplate} onChange={(e)=>setEmailTemplate(e.target.value)} placeholder='Enter Message'></textarea>\r\n                      </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                      {/* <h3>Modal Footer</h3> */}\r\n                      <button onClick={()=>sendEmail()}>Send</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                {/*Payment Modal */}\r\n                <div id=\"paymentModal\" className={`modal ${paymentModal?'show':''}`}>\r\n\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <span onClick={()=>setPaymentModal(false)} className=\"close\">&times;</span>\r\n                            <h4>Received Payment</h4>\r\n                        </div>\r\n                    <div className=\"modal-body\">\r\n                      <div className=\"received-payment\">\r\n                        {/* <p><b>Payment Method :</b></p> */}\r\n                        {/* <span>\r\n                          <input onChange={(e) => setPayMethod(e.target.value)} value='Cash'\r\n                            id='cash' type=\"radio\" name='payment' />\r\n                          <label htmlFor='cash'>Cash</label>\r\n                        </span>\r\n                        <span>\r\n                          <input onChange={(e) => setPayMethod(e.target.value)} value='Cheque'\r\n                            id='cheque' type=\"radio\" name='payment' />\r\n                          <label htmlFor='cheque'>Cheque</label>\r\n                        </span>\r\n                        <span>\r\n                          <input onChange={(e) => setPayMethod(e.target.value)} value='Bank Transfer'\r\n                            id='banktransfer' type=\"radio\" name='payment' />\r\n                          <label htmlFor='banktransfer'>Bank Transfer</label>\r\n                        </span>\r\n                        <span>\r\n                          <input onChange={(e) => setPayMethod(e.target.value)} value='Stripe'\r\n                            id='stripe' type=\"radio\" name='payment' />\r\n                          <label htmlFor='stripe'>Stripe</label>\r\n                        </span>\r\n                        <span>\r\n                          <input onChange={(e) => setPayMethod(e.target.value)} value='EFPOS'\r\n                            id='efpos' type=\"radio\" name='payment' />\r\n                          <label htmlFor='efpos'>EFPOS</label>\r\n                        </span> */}\r\n                        <span>\r\n                          <label htmlFor='payment-option'><b>Paayment Method: </b></label>\r\n                          <select id='payment-option' onChange={(e) => setPayMethod(e.target.value)}>\r\n                            <option value='' default>Please select payment option</option>\r\n                            <option value='Cash'>Cash</option>\r\n                            <option value='Cheque'>Cheque</option>\r\n                            <option value='Bank Transfer'>Bank Transfer</option>\r\n                            <option value='Stripe'>Stripe</option>\r\n                            <option value='EFPOS'>EFPOS</option>\r\n                          </select>\r\n                        </span>\r\n                        <span className='rec-payment-input'>\r\n                          <label htmlFor='received-payment'><b>Value: </b></label>\r\n                          <input onChange={(e) => setPayValue(parseFloat(e.target.value))} value={payValue}\r\n                            id='received-payment' type=\"number\" placeholder='Enter received value' />\r\n                        </span>\r\n                        {payValue === '' && payMethod==='' ? <></> :\r\n                          <button onClick={() => updatePayment()}>Payment Received</button>}\r\n                      </div>\r\n                      <div>\r\n                        {paymentList.length === 0 ?<></>:\r\n                        <table id=\"tblSearch\" className=\"table table-hover nowrap my-3\">\r\n                          <thead style={{ backgroundColor: \"#00CED1\" }} >\r\n                            <tr>\r\n                              <th className=\"first\" style={{ width: '45%' }}>Date</th>\r\n                              <th className=\"second\" style={{ width: '25%' }}>Payment Method</th>\r\n                              <th className=\"second\" style={{ width: '15%' }}>Payment Received</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {paymentList.map((v, i) => \r\n                              <tr key={i}>\r\n                                <td className=\"first\" style={{ width: '45%' }}>{v.date.toLocaleString()}</td>\r\n                                <td className=\"second\" style={{ width: '25%' }}>{v.payMethod}</td>\r\n                                <td className=\"second\" style={{ width: '15%' }}>${v.payValue}</td>\r\n                              </tr>\r\n                            )}\r\n                            \r\n                            {/* <tr>\r\n                              <td className=\"first\" style={{ width: '25%' }}>03/02/2021</td>\r\n                              <td className=\"second\" style={{ width: '45%' }}>Cheque</td>\r\n                              <td className=\"second\" style={{ width: '15%' }}>$35</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td className=\"first\" style={{ width: '25%' }}>01/03/2021</td>\r\n                              <td className=\"second\" style={{ width: '45%' }}>Bank Transfer</td>\r\n                              <td className=\"second\" style={{ width: '15%' }}>$65</td>\r\n                            </tr> */}\r\n                            {/* {invoice.selectedInvoice.listItems.map((v, i) =>\r\n                              <tr key={i}>\r\n                                <td className=\"first\">{v.longDescription}</td>\r\n                                <td className=\"second\" >${v.price}</td>\r\n                              </tr>\r\n                            )} */}\r\n\r\n                          </tbody>\r\n                        </table>}\r\n                      </div>\r\n                      <div className='amount-details'>\r\n                        <div>\r\n                          <p><b>Total Amount :</b></p>\r\n                          <p>${totalPrice}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p><b>Paid Amount :</b></p>\r\n                          <p>${paidAmount}</p>\r\n                        </div>\r\n                        <div>\r\n                          <p><b>Balance Amount :</b></p>\r\n                          <p>${totalPrice-paidAmount}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                        <div className=\"modal-footer\">\r\n                      {/* <h3>Modal Footer</h3> */}\r\n                      {/* <button>Send</button> */}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n              </section>\r\n              <div className=\"clearfix\" />\r\n            </div> : <></>}\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default GenerateInvoice;\r\n\r\n","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\emailActions.js",["149","150","151","152"],"import Axios from \"axios\";\r\nimport { serverAddress } from \"../constants/dbConstants\";\r\nimport { EMAIL_SEND_FAIL, EMAIL_SEND_REQUEST, EMAIL_SEND_SUCCESS } from \"../constants/emailConstants\";\r\n\r\nexport const sendEmailBackend = (receiver, message) => async (dispatch) => {\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/email`, { receiver, message });\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_REQUEST,\r\n        //     payload: data,\r\n        // });\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_SUCCESS,\r\n        //     payload: data,\r\n        // });\r\n     } catch (err) {\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_FAIL,\r\n        //     payload: err.response && err.response.data.message ?\r\n        //         err.response.data.message : err.message,\r\n        // });\r\n    }\r\n};\r\n\r\n","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\emailConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripePayment\\StripePayment.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CustomersScreen.js",["153","154","155","156"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\EditCustomersScreen.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":11,"column":10,"nodeType":"163","messageId":"164","endLine":11,"endColumn":26},{"ruleId":"161","severity":1,"message":"165","line":11,"column":28,"nodeType":"163","messageId":"164","endLine":11,"endColumn":47},{"ruleId":"166","severity":1,"message":"167","line":71,"column":19,"nodeType":"163","endLine":71,"endColumn":34},{"ruleId":"166","severity":1,"message":"167","line":77,"column":19,"nodeType":"163","endLine":77,"endColumn":34},{"ruleId":"161","severity":1,"message":"168","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":19},{"ruleId":"161","severity":1,"message":"169","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":25},{"ruleId":"161","severity":1,"message":"170","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":32},{"ruleId":"161","severity":1,"message":"171","line":44,"column":9,"nodeType":"163","messageId":"164","endLine":44,"endColumn":22},{"ruleId":"161","severity":1,"message":"172","line":48,"column":9,"nodeType":"163","messageId":"164","endLine":48,"endColumn":20},{"ruleId":"161","severity":1,"message":"173","line":1,"column":319,"nodeType":"163","messageId":"164","endLine":1,"endColumn":336},{"ruleId":"161","severity":1,"message":"174","line":1,"column":338,"nodeType":"163","messageId":"164","endLine":1,"endColumn":358},{"ruleId":"161","severity":1,"message":"175","line":1,"column":360,"nodeType":"163","messageId":"164","endLine":1,"endColumn":380},{"ruleId":"161","severity":1,"message":"176","line":1,"column":514,"nodeType":"163","messageId":"164","endLine":1,"endColumn":536},{"ruleId":"161","severity":1,"message":"177","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":21},{"ruleId":"161","severity":1,"message":"178","line":12,"column":28,"nodeType":"163","messageId":"164","endLine":12,"endColumn":46},{"ruleId":"161","severity":1,"message":"179","line":12,"column":48,"nodeType":"163","messageId":"164","endLine":12,"endColumn":69},{"ruleId":"161","severity":1,"message":"180","line":13,"column":5,"nodeType":"163","messageId":"164","endLine":13,"endColumn":23},{"ruleId":"161","severity":1,"message":"181","line":163,"column":17,"nodeType":"163","messageId":"164","endLine":163,"endColumn":21},{"ruleId":"161","severity":1,"message":"182","line":279,"column":11,"nodeType":"163","messageId":"164","endLine":279,"endColumn":20},{"ruleId":"161","severity":1,"message":"183","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":14},{"ruleId":"161","severity":1,"message":"184","line":6,"column":8,"nodeType":"163","messageId":"164","endLine":6,"endColumn":13},{"ruleId":"161","severity":1,"message":"185","line":8,"column":10,"nodeType":"163","messageId":"164","endLine":8,"endColumn":25},{"ruleId":"161","severity":1,"message":"186","line":29,"column":10,"nodeType":"163","messageId":"164","endLine":29,"endColumn":17},{"ruleId":"161","severity":1,"message":"187","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":25},{"ruleId":"161","severity":1,"message":"188","line":3,"column":27,"nodeType":"163","messageId":"164","endLine":3,"endColumn":45},{"ruleId":"161","severity":1,"message":"189","line":3,"column":47,"nodeType":"163","messageId":"164","endLine":3,"endColumn":65},{"ruleId":"161","severity":1,"message":"181","line":7,"column":17,"nodeType":"163","messageId":"164","endLine":7,"endColumn":21},{"ruleId":"161","severity":1,"message":"190","line":1,"column":21,"nodeType":"163","messageId":"164","endLine":1,"endColumn":29},{"ruleId":"161","severity":1,"message":"191","line":3,"column":22,"nodeType":"163","messageId":"164","endLine":3,"endColumn":33},{"ruleId":"161","severity":1,"message":"192","line":3,"column":35,"nodeType":"163","messageId":"164","endLine":3,"endColumn":48},{"ruleId":"161","severity":1,"message":"170","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":32},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'shortDescription' is assigned a value but never used.","Identifier","unusedVar","'setShortDescription' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'tempService' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useEffect' is defined but never used.","'getSettingsInfo' is defined but never used.","'selectedInvoiceReducer' is defined but never used.","'deleteInvoice' is assigned a value but never used.","'editInvoice' is assigned a value but never used.","'SERVICE_SAVE_FAIL' is defined but never used.","'SERVICE_SAVE_REQUEST' is defined but never used.","'SERVICE_SAVE_SUCCESS' is defined but never used.","'UPDATE_PAYMENT_SUCCESS' is defined but never used.","'useSelector' is defined but never used.","'SETTINGS_INFO_FAIL' is defined but never used.","'SETTINGS_SAVE_SUCCESS' is defined but never used.","'SETTINGS_SAVE_FAIL' is defined but never used.","'data' is assigned a value but never used.","'companyId' is assigned a value but never used.","'Link' is defined but never used.","'Modal' is defined but never used.","'settingsReducer' is defined but never used.","'payDate' is assigned a value but never used.","'EMAIL_SEND_FAIL' is defined but never used.","'EMAIL_SEND_REQUEST' is defined but never used.","'EMAIL_SEND_SUCCESS' is defined but never used.","'useState' is defined but never used.","'invoiceList' is defined but never used.","'selectInvoice' is defined but never used.","no-global-assign","no-unsafe-negation"]