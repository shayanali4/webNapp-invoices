[{"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js":"1","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js":"2","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js":"3","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js":"4","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js":"5","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js":"6","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js":"7","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js":"8","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js":"9","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js":"10","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js":"11","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js":"12","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js":"13","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js":"14","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js":"15","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js":"16","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js":"17","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js":"18","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js":"19","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js":"20","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js":"21","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js":"22","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js":"23","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js":"24","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\emailActions.js":"25","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\emailConstants.js":"26","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\EditCustomersScreen.js":"27","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CustomersScreen.js":"28","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripePayment\\StripePayment.js":"29","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripeCard\\StripeCard.js":"30","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Payment.js":"31","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\TestPDF.js":"32","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\ComponentToPrint.js":"33"},{"size":617,"mtime":1614052918248,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1611774201000,"results":"36","hashOfConfig":"35"},{"size":652,"mtime":1615440971405,"results":"37","hashOfConfig":"35"},{"size":1863,"mtime":1615738263119,"results":"38","hashOfConfig":"35"},{"size":6000,"mtime":1615169762647,"results":"39","hashOfConfig":"35"},{"size":4732,"mtime":1615452068819,"results":"40","hashOfConfig":"35"},{"size":2348,"mtime":1615433624146,"results":"41","hashOfConfig":"35"},{"size":2095,"mtime":1615433624067,"results":"42","hashOfConfig":"35"},{"size":8046,"mtime":1615775627470,"results":"43","hashOfConfig":"35"},{"size":4773,"mtime":1615452153012,"results":"44","hashOfConfig":"35"},{"size":6548,"mtime":1615775036633,"results":"45","hashOfConfig":"35"},{"size":1268,"mtime":1615365860695,"results":"46","hashOfConfig":"35"},{"size":635,"mtime":1614053213717,"results":"47","hashOfConfig":"35"},{"size":214,"mtime":1614053398888,"results":"48","hashOfConfig":"35"},{"size":119,"mtime":1615529827989,"results":"49","hashOfConfig":"35"},{"size":2000,"mtime":1615433624032,"results":"50","hashOfConfig":"35"},{"size":190,"mtime":1608907475781,"results":"51","hashOfConfig":"35"},{"size":187,"mtime":1607771183599,"results":"52","hashOfConfig":"35"},{"size":5217,"mtime":1615433624064,"results":"53","hashOfConfig":"35"},{"size":1619,"mtime":1615433624059,"results":"54","hashOfConfig":"35"},{"size":11511,"mtime":1615776132166,"results":"55","hashOfConfig":"35"},{"size":22473,"mtime":1615778930525,"results":"56","hashOfConfig":"35"},{"size":406,"mtime":1614911174714,"results":"57","hashOfConfig":"35"},{"size":1598,"mtime":1614315326603,"results":"58","hashOfConfig":"35"},{"size":846,"mtime":1615186965266,"results":"59","hashOfConfig":"35"},{"size":163,"mtime":1615186636916,"results":"60","hashOfConfig":"35"},{"size":4851,"mtime":1615451950661,"results":"61","hashOfConfig":"35"},{"size":2635,"mtime":1615433624066,"results":"62","hashOfConfig":"35"},{"size":518,"mtime":1615433624055,"results":"63","hashOfConfig":"35"},{"size":3706,"mtime":1615782344206,"results":"64","hashOfConfig":"35"},{"size":1372,"mtime":1615434139846,"results":"65","hashOfConfig":"35"},{"size":274,"mtime":1615745825059,"results":"66","hashOfConfig":"35"},{"size":11341,"mtime":1615745882629,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"556jn6",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js",[],["145","146"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js",["147","148","149","150"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { serviceList, newInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction InvoiceDetailsScreen(props) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;  \r\n  // const [services, setServices] = useState([]);\r\n\r\n  const [shortDescription, setShortDescription] = useState('');\r\n  const [longDescription, setLongDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const [serviceIndex, setServiceIndex] = useState();\r\n  // const [invoice, setInvoice] = useState({});\r\n  const [selectedService, setSelectedService] = useState({\r\n    shortDescription: '',\r\n    longDescription: '',\r\n    price: 0,\r\n    itemNumber:0\r\n  });\r\n  let tempService = {};\r\n  const [itemNumber, setItemNumber] = useState(0);\r\n  const [listItems, setListItems] = useState([]);\r\n  const servicesInfo = useSelector((state) => state.serviceInfo);\r\n  if (servicesInfo.servicesList) {\r\n    // console.log(\"services\", servicesInfo.servicesList)\r\n    // setServices(servicesInfo.servicesList);\r\n  }\r\n\r\n  const selectedClient = useSelector((state) => state.choosenClientInfo);\r\n  const { choosenClient } = selectedClient;    \r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      props.history.push('/');\r\n    }\r\n  }, [props.history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(serviceList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedClient) {\r\n      props.history.push('/create');\r\n    }\r\n  }, [props.history, selectedClient]);\r\n\r\n  useEffect(() => {\r\n    if (servicesInfo.servicesList) {\r\n      setSelectedService(servicesInfo.servicesList[serviceIndex]);\r\n    }\r\n          // setLongDescription(selectedService.longDescription);\r\n    // console.log(\"serv\", selectedService);\r\n\r\n  }, [serviceIndex, servicesInfo]);\r\n  \r\n  useEffect(() => {\r\n    if (selectedService) {\r\n      setLongDescription(selectedService.longDescription);\r\n      setPrice(selectedService.price)\r\n      console.log(\"serv\", selectedService);\r\n    }\r\n\r\n  }, [serviceIndex,selectedService])\r\n  useEffect(() => {\r\n    tempService = selectedService;\r\n    tempService.longDescription = longDescription;\r\n    setSelectedService(tempService)\r\n  }, [longDescription]);\r\n\r\n  useEffect(() => {\r\n    tempService = selectedService;\r\n    tempService.price = price;\r\n    setSelectedService(tempService)\r\n  }, [price]);\r\n\r\n  const addToList = () => {\r\n    setItemNumber(itemNumber+1)\r\n    const tempService = servicesInfo.servicesList[serviceIndex];\r\n    setListItems(prevArray => [...prevArray, {\r\n      shortDescription: tempService.shortDescription,\r\n      longDescription: tempService.longDescription,\r\n      price: tempService.price,\r\n      itemNumber: itemNumber\r\n    }]);\r\n  }\r\n\r\n  // console.log(selectedService);\r\n  // const addToList = () => {\r\n  //   setListItems(prevArray => [...prevArray, selectedService]);\r\n  // }\r\n\r\n  const removeFromList = (index) => {\r\n    const removedItem = listItems.splice(index,1);\r\n    setListItems(listItems.filter(x=>x.itemNumber!==removedItem[0].itemNumber));\r\n    // const tempList = listItems;\r\n    // const newList = delete tempList[index];\r\n    console.log(removedItem);\r\n\r\n  }\r\n  console.log(\"list items\",listItems)\r\n  const submitHandler = () => {\r\n    const totalAmount = listItems.reduce((prev, next) => prev + next.price, 0);\r\n    const date = GetFormattedDate();\r\n\r\n    const generatedInvoice = {\r\n      clientName: choosenClient.clientName,\r\n      email: choosenClient.email,\r\n      phone: choosenClient.phone,\r\n      address: choosenClient.address,\r\n      ABN: choosenClient.ABN,\r\n      listItems: listItems,\r\n      totalAmount: totalAmount,\r\n      paidAmount: 0,\r\n      balanceAmount: totalAmount,\r\n      createdDate: date\r\n    };\r\n    dispatch(newInvoice(generatedInvoice));\r\n\r\n    props.history.push('/generate');\r\n  }\r\n    const GetFormattedDate=()=> {\r\n    var todayTime = new Date();\r\n    var month = todayTime.getMonth()+1;\r\n    var day = todayTime.getDate();\r\n    var year = todayTime.getFullYear();\r\n\r\n    return day + \"/\" + month + \"/\" + year;\r\n  }\r\n    return (\r\n      <>\r\n        <Header />\r\n      \r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n                  &nbsp;Create Invoice\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Enter invoice details here\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {choosenClient ?\r\n          <div className=\"client-details\">\r\n                    <div>\r\n                      <label>Name :</label>\r\n                      <p>{choosenClient.clientName}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>Email :</label>\r\n                      <p>{choosenClient.email}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>Phone :</label>\r\n                      <p>{choosenClient.phone}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>ABN :</label>\r\n                      <p>{choosenClient.ABN}</p>\r\n                    </div>\r\n            </div> : <></>}\r\n          \r\n          {listItems.length !== 0 ?\r\n            <ul className=\"list\">\r\n              {listItems.map((v, i) =>\r\n                <li key={i}>\r\n\r\n                <div className=\"details\">\r\n                  <div><b>{v.shortDescription}</b></div>\r\n                  <div>\r\n\r\n                      {v.longDescription} <b>( $ {v.price} )</b>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <i onClick={() => removeFromList(i)}\r\n                      className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              )}        \r\n            </ul> : <></>}\r\n                  <div className=\"contactform\" id=\"dvform\">\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"Select Client\">Invoice Service: </label>\r\n              <select onChange={(e) =>setServiceIndex(e.target.value) }\r\n                className=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\r\n                <option defaultValue>Please select invoice service</option>\r\n                        {servicesInfo.servicesList? <>\r\n                          {servicesInfo.servicesList.map((v, i) =>\r\n                            <option key={i} id={i} value={i}>{v.shortDescription}</option>\r\n                        )}\r\n                        </>\r\n                    : <></>}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"description\">Description: </label>\r\n                    <textarea onChange={(e) => setLongDescription(e.target.value)} value={longDescription}\r\n                      name=\"description\" id=\"description\" rows={10} placeholder=\"Enter description\" />\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"amount\">Amount: </label>\r\n                <input onChange={(e) => setPrice(e.target.value)} value={price}\r\n                  type=\"number\" name=\"amount\" id=\"amount\" placeholder=\"Enter Amount\" className=\"form_input required\" />\r\n                    </div>\r\n                    <input onClick={()=>addToList()} type=\"button\" id=\"add\" name=\"submit\" className=\"form_submit\" defaultValue=\"Add List Item\" />\r\n                    <button onClick={()=>submitHandler()} className='generate-inv-btn'>Generate Invoice</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n    );\r\n  }\r\nexport default InvoiceDetailsScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js",["151","152"],"// import { useHistory } from \"react-router-dom\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSettingsInfo, updateSettings } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nfunction ConfigurationScreen(props) {\r\n  \r\n  const settingsInfo = useSelector((state) => state.settingsInfo);\r\n  const { settings } = settingsInfo;\r\n\r\n  \r\n  // console.log('Settings', settings);\r\n  \r\n  const [stripeKey, setStripeKey] = useState(settings.stripeKey);\r\n  const [invoiceFooter, setInvoiceFooter] = useState(settings.invoiceFooter);\r\n  const [emailTemplate, setEmailTemplate] = useState(settings.emailTemplate);\r\n  const [smsTemplate, setSmsTemplate] = useState(settings.smsTemplate);\r\n  const [messageFlag, setMessageFlag] = useState(false);\r\n  \r\n  \r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   dispatch(getSettingsInfo());\r\n    \r\n  // }, [dispatch]);\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateSettings(stripeKey, invoiceFooter, emailTemplate, smsTemplate));\r\n\r\n        setTimeout(()=>{setMessageFlag(true)},1000)\r\n        setTimeout(()=>{setMessageFlag(false)},3000)\r\n  }\r\n    return (\r\n      <>\r\n        <Header />\r\n        {settingsInfo.settings ?\r\n\r\n          <div id=\"pages_maincontent\">\r\n            <h2 className=\"page_title page1\" >\r\n              <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n\r\n              <i className=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                  &nbsp; Configuration\r\n                </h2>\r\n            <h3 id=\"dvResellerName\" >\r\n              Make changes here\r\n                </h3>\r\n            {messageFlag ?\r\n                        <MessageBox variant='success'>Settings Updated</MessageBox> : <></>}\r\n            \r\n            <div className=\"container-fluid1 container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 main123 \">\r\n                  <form onSubmit={(e)=>submitHandler(e)}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleInputEmail1\">Stripe Secret Key:</label>\r\n                      <input value={stripeKey} onChange={(e)=>setStripeKey(e.target.value)} type=\"key\" placeholder=\"Enter Stripe Secret Key\" className=\"input1\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    </div>\r\n                    {/* <div className=\"wrapper  wrapper1\" id=\"wrapper\">\r\n                      <label htmlFor=\"yes_no_radio\">GST Included</label>\r\n                      <div >\r\n                        <p >\r\n                          <input type=\"radio\" name=\"yes_no\" defaultChecked />Yes\r\n                            </p> &ensp;\r\n                            <p>\r\n                          <input type=\"radio\" name=\"yes_no\" />No\r\n                            </p>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"form-group from-group1\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">Invoice Footer:</label>\r\n                      <textarea value={invoiceFooter} onChange={(e) => setInvoiceFooter(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <div className=\"form-group from-group1\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">Email Template</label>\r\n                      <textarea value={emailTemplate} onChange={(e) => setEmailTemplate(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <div className=\"form-group from-group1\">\r\n                      <label style={{ marginTop: \"50px\" }} htmlFor=\"exampleFormControlTextarea1\">SMS Template</label>\r\n                      <textarea value={smsTemplate} onChange={(e) => setSmsTemplate(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"page_single layout_fullwidth_padding\">\r\n                 \r\n              <div className=\"contactform\" id=\"dvform\">\r\n                {/* Add form here */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : <></>}\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default ConfigurationScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js",["153","154"],"import { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { invoiceList, selectInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\nimport { selectedInvoiceReducer } from \"../reducers/invoiceReducers\";\r\n\r\nfunction InvoicesScreen(props) {\r\n  const [selectedInvoice, setSelectedInvoice] = useState({});\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(invoiceList());\r\n    // const clients = useSelector((state) => state.clients);\r\n\r\n  }, [dispatch]);\r\n\r\n  const invoicesListInfo = useSelector((state) => state.invoicesListInfo);\r\n  console.log('invoice list', invoicesListInfo);\r\n\r\n  const getSelectedInvoice = useSelector((state) => state.invoiceInfo);\r\n  // console.log(getSelectedInvoice)\r\n\r\n  \r\n  const chooseInvoice = (index) => {\r\n    setSelectedInvoice(invoicesListInfo.invoicesList[index]);\r\n    // console.log(\"select\",invoicesListInfo.invoicesList[index])\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(selectInvoice(selectedInvoice));\r\n    // console.log(\"selected inv==>\", selectedInvoice);\r\n\r\n  }, [dispatch, selectedInvoice]);\r\n  const [invoiceClick, setInvoiceClick] = useState(false);\r\n  useEffect(() => {\r\n    if (invoiceClick) {\r\n      if (getSelectedInvoice.selectedInvoice) {\r\n        props.history.push('/generate');\r\n        setInvoiceClick(false);\r\n      }\r\n    }\r\n    // console.log(\"selected inv==>\", selectedInvoice);\r\n\r\n  }, [dispatch, getSelectedInvoice,invoiceClick, props.history]);\r\n  const deleteInvoice = () => {\r\n    // Next task\r\n  }\r\n\r\n  const editInvoice = () => {\r\n    // Next task\r\n  }\r\n\r\n\r\n\r\n  return (\r\n      <>\r\n      <Header />\r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i className=\"fa fa-bars\" aria-hidden=\"true\" />\r\n                  &nbsp;Invoices\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Invoice list\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {invoicesListInfo.invoicesList ?\r\n            <ul className=\"list\">\r\n              {invoicesListInfo.invoicesList.map((v, i) =>\r\n                <li onClick={() => { chooseInvoice(i);setInvoiceClick(true) }} key={i}>\r\n                  {/* <div>\r\n                    <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                  </div> */}\r\n                  <div className=\"details\">\r\n                    <div><b>{v.companyName} (${v.totalAmount})</b></div>\r\n                    <div>\r\n                      <span className=\"first\">\r\n                        {v.invoiceNumber}\r\n                      </span>\r\n                      <span>\r\n                        {v.createdDate}\r\n                          </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"first\">\r\n                        {v.clientName}\r\n                      </span>\r\n                      <span>\r\n                        {v.email}\r\n                          </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"actions\">\r\n                    <i onClick={() => { editInvoice(i); }} className=\"fas fa-edit\" aria-hidden=\"true\" />\r\n                  </div>\r\n                </li>\r\n              )}\r\n                    \r\n              {/* <li>\r\n                <div>\r\n                  <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                  <div><b>Invoice Number 2</b></div>\r\n                  <div>\r\n                    <span className=\"first\">\r\n                      Phone\r\n                          </span>\r\n                    <span>\r\n                      ABN\r\n                          </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div>\r\n                  <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                  <div><b>Invoice Number 3</b></div>\r\n                  <div>\r\n                    <span className=\"first\">\r\n                      Phone\r\n                          </span>\r\n                    <span>\r\n                      ABN\r\n                          </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div>\r\n                  <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                  <div><b>Invoice Number 4</b></div>\r\n                  <div>\r\n                    <span className=\"first\">\r\n                      Phone\r\n                          </span>\r\n                    <span>\r\n                      ABN\r\n                          </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div>\r\n                  <i className=\"fa fa-file\" aria-hidden=\"true\" />\r\n                </div>\r\n                <div className=\"details\">\r\n                  <div><b>Invoice Number 5</b></div>\r\n                  <div>\r\n                    <span className=\"first\">\r\n                      Phone\r\n                          </span>\r\n                    <span>\r\n                      ABN\r\n                          </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                  <i className=\"fa fa-pencil-square\" aria-hidden=\"true\" />\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li> */}\r\n            </ul> : <></>}\r\n                </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n    export default InvoicesScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js",["155","156","157"],"import { CLIENT_LIST_FAIL, CLIENT_LIST_REQUEST, CLIENT_LIST_SUCCESS, CLIENT_SAVE_FAIL, CLIENT_SAVE_REQUEST, CLIENT_SAVE_SUCCESS, INVOICE_LIST_FAIL, INVOICE_LIST_REQUEST, INVOICE_LIST_SUCCESS, INVOICE_SAVE_FAIL, INVOICE_SAVE_REQUEST, INVOICE_SAVE_SUCCESS, SERVICE_LIST_FAIL, SERVICE_LIST_REQUEST, SERVICE_LIST_SUCCESS, SERVICE_SAVE_FAIL, SERVICE_SAVE_REQUEST, SERVICE_SAVE_SUCCESS, SETTINGS_INFO_FAIL, SETTINGS_INFO_REQUEST, SETTINGS_INFO_SUCCESS, SETTINGS_SAVE_FAIL, SETTINGS_SAVE_REQUEST, SETTINGS_SAVE_SUCCESS, UPDATE_PAYMENT_SUCCESS } from \"../constants/invoiceConstants\";\r\n\r\n// Client Reducers\r\n\r\n//Client List\r\nexport const clientListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CLIENT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case CLIENT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                clientsList: action.payload\r\n            };\r\n        case CLIENT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//New Client\r\nexport const saveClient = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case CLIENT_SAVE_REQUEST:\r\n            return { loading: true };\r\n        case CLIENT_SAVE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                choosenClient: action.payload\r\n            };\r\n        case CLIENT_SAVE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Service Reducers\r\n\r\nexport const serviceListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SERVICE_LIST_REQUEST:\r\n            return { loading: true };\r\n        case SERVICE_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                servicesList: action.payload.services\r\n            };\r\n        case SERVICE_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Select Invoice Reducer\r\nexport const selectedInvoiceReducer = (state = {}, action) => {\r\n    // console.log(\"selected ib=v reducer==>\",action.payload)\r\n    switch (action.type) {\r\n        case INVOICE_SAVE_REQUEST:\r\n            return { loading: true };\r\n        case INVOICE_SAVE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                selectedInvoice: action.payload\r\n            };\r\n        case INVOICE_SAVE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case UPDATE_PAYMENT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                selectedInvoice: {\r\n                    ...state.invoiceInfo.selectedInvoice,\r\n                    paymentList: action.payload\r\n                }\r\n            }\r\n        default:\r\n\r\n            return state;\r\n    }\r\n};\r\n\r\n//Invoice List\r\nexport const invoiceListReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case INVOICE_LIST_REQUEST:\r\n            return { loading: true };\r\n            \r\n        case INVOICE_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                invoicesList: action.payload\r\n            };\r\n        case INVOICE_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Settings Reducers\r\n\r\nexport const settingsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SETTINGS_INFO_REQUEST:\r\n            return {\r\n                loading: true,\r\n                settings: {\r\n                    stripeKey: '',\r\n                    invoiceFooter: '',\r\n                    emailTTemplate: '',\r\n                    smsTemplate: ''\r\n                }\r\n            };\r\n        case SETTINGS_INFO_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                settings: action.payload\r\n            };\r\n        case SETTINGS_INFO_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case SETTINGS_SAVE_REQUEST:\r\n            return {\r\n                loading: true,\r\n                settings: {\r\n                    stripeKey: '',\r\n                    invoiceFooter: '',\r\n                    emailTTemplate: '',\r\n                    smsTemplate: ''\r\n                }\r\n            };\r\n        \r\n        case SETTINGS_SAVE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                choosenClient: action.payload\r\n            };\r\n        case SETTINGS_SAVE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n// Save Service\r\n// export const saveService = (state = {}, action) => {\r\n//     switch (action.type) {\r\n//         case SERVICE_SAVE_REQUEST:\r\n//             return { loading: true };\r\n//         case SERVICE_SAVE_SUCCESS:\r\n//             return {\r\n//                 loading: false,\r\n//                 newService: action.payload\r\n//             };\r\n//         case SERVICE_SAVE_FAIL:\r\n//             return { loading: false, error: action.payload };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js",["158","159","160","161","162","163"],"import Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { serverAddress } from \"../constants/dbConstants\";\r\nimport {\r\n    CLIENT_LIST_FAIL, CLIENT_LIST_REQUEST, CLIENT_LIST_SUCCESS,\r\n    CLIENT_SAVE_FAIL, CLIENT_SAVE_REQUEST, CLIENT_SAVE_SUCCESS,\r\n    INVOICE_LIST_FAIL, INVOICE_LIST_REQUEST, INVOICE_LIST_SUCCESS,\r\n    INVOICE_SAVE_FAIL, INVOICE_SAVE_REQUEST, INVOICE_SAVE_SUCCESS,\r\n    UPDATE_PAYMENT_REQUEST, UPDATE_PAYMENT_SUCCESS, UPDATE_PAYMENT_FAIL,\r\n    SERVICE_LIST_FAIL, SERVICE_LIST_REQUEST, SERVICE_LIST_SUCCESS,\r\n    SERVICE_SAVE_FAIL, SERVICE_SAVE_REQUEST, SETTINGS_INFO_REQUEST,\r\n    SETTINGS_INFO_SUCCESS, SETTINGS_INFO_FAIL, SETTINGS_SAVE_SUCCESS,\r\n    SETTINGS_SAVE_FAIL, SETTINGS_SAVE_REQUEST\r\n} from \"../constants/invoiceConstants\";\r\n\r\n\r\n// Client Actions\r\n \r\n// Get Existing Clients List\r\nexport const clientList = (userName, password) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients`, { companyId });\r\n        dispatch({\r\n            type: CLIENT_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n        localStorage.setItem('clientsInfo', JSON.stringify(data));\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Old Client\r\nexport const oldclient = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CLIENT_SAVE_SUCCESS,\r\n        payload: data,\r\n    });\r\n};\r\n\r\n// New Client\r\nexport const newclient = (clientName, companyName, email, address, phone, ABN ) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_SAVE_REQUEST,\r\n        payload: {\r\n            companyId,\r\n            clientName,\r\n            companyName,\r\n            email,\r\n            address,\r\n            phone,\r\n            ABN \r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients/create`, { companyId, clientName, companyName, email, address, phone, ABN });\r\n        console.log(\"client received==>\",data)\r\n        dispatch({\r\n            type: CLIENT_SAVE_SUCCESS,\r\n            payload: data.selectedClient[0],\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Edit Customer\r\nexport const editCustomer = (_id, clientName, companyName, email, address, phone, ABN ) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_SAVE_REQUEST,\r\n        payload: {\r\n            companyId,\r\n            _id,\r\n            clientName,\r\n            companyName,\r\n            email,\r\n            address,\r\n            phone,\r\n            ABN \r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients/update`, { companyId, _id, clientName, companyName, email, address, phone, ABN });\r\n        console.log(\"client received==>\",data)\r\n        dispatch({\r\n            type: CLIENT_SAVE_SUCCESS,\r\n            payload: data.selectedClient[0],\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n// Services\r\n\r\n// Get Existing Services List\r\nexport const serviceList = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SERVICE_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/services`, { companyId });\r\n        dispatch({\r\n            type: SERVICE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n//New Service\r\nexport const newservice = (shortDescription, longDescription, price) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SERVICE_SAVE_REQUEST,\r\n        payload: {\r\n            shortDescription,\r\n            longDescription,\r\n            price\r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/services/create`, { companyId, shortDescription, longDescription, price });\r\n\r\n        dispatch({\r\n            type: SERVICE_LIST_REQUEST,\r\n    });\r\n        try {\r\n            const { data } = await Axios.post(`${serverAddress}/api/services`, { companyId });\r\n            dispatch({\r\n                type: SERVICE_LIST_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: SERVICE_LIST_FAIL,\r\n                payload: err.response && err.response.data.message ?\r\n                    err.response.data.message : err.message,\r\n            });\r\n        }\r\n\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// New Invoice\r\nexport const newInvoice = (invoice) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    // console.log(\"invoice action\", invoice)\r\n    dispatch({\r\n        type: INVOICE_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices/new`, {\r\n            companyId: companyId,\r\n            clientName: invoice.clientName,\r\n            email: invoice.email,\r\n            phone: invoice.phone,\r\n            address: invoice.address,\r\n            ABN: invoice.ABN,\r\n            listItems: invoice.listItems,\r\n            totalAmount: invoice.totalAmount,\r\n            paidAmount: invoice.paidAmount,\r\n            balanceAmount: invoice.balanceAmount,\r\n            createdDate: invoice.createdDate\r\n        });\r\n        console.log(\"new invoice action\",invoice)\r\n        console.log('created Innvoice abc received ',data)\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"error\",err)\r\n        dispatch({\r\n            type: INVOICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Invoices List\r\nexport const invoiceList = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: INVOICE_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices`, { companyId });\r\n        dispatch({\r\n            type: INVOICE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: INVOICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Select Invoice\r\nexport const selectInvoice = (invoice) => async (dispatch) => {\r\n    console.log(\"select iv action==>\",invoice)\r\n    dispatch({\r\n        type: INVOICE_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: invoice,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: INVOICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Update Payment List\r\nexport const updatePaymentDetails = (_id, payMethod, payValue, payDate) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    console.log(\"invoice action\",companyId,_id, payMethod, payValue, payDate)\r\n    dispatch({\r\n        type: UPDATE_PAYMENT_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices/updatepayment`, {companyId, _id, payMethod, payValue, payDate });\r\n        // console.log(\"new invoice action\",invoice)\r\n        console.log('updatwed Innvoice payement ',data)\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"error\",err)\r\n        dispatch({\r\n            type: UPDATE_PAYMENT_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Settings Info\r\nexport const getSettingsInfo = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SETTINGS_INFO_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/settings`, { companyId });\r\n        dispatch({\r\n            type: SETTINGS_INFO_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// // Update Settings\r\nexport const updateSettings = (stripeKey, invoiceFooter, emailTemplate, smsTemplate) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    // console.log(\"invoice action\", invoice)\r\n    dispatch({\r\n        type: SETTINGS_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/settings/update`, { companyId,stripeKey,invoiceFooter,emailTemplate,smsTemplate });\r\n        dispatch({\r\n            type: SETTINGS_INFO_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js",["164","165","166","167","168"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\emailActions.js",["169","170","171","172"],"import Axios from \"axios\";\r\nimport { serverAddress } from \"../constants/dbConstants\";\r\nimport { EMAIL_SEND_FAIL, EMAIL_SEND_REQUEST, EMAIL_SEND_SUCCESS } from \"../constants/emailConstants\";\r\n\r\nexport const sendEmailBackend = (receiver, message) => async (dispatch) => {\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/email`, { receiver, message });\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_REQUEST,\r\n        //     payload: data,\r\n        // });\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_SUCCESS,\r\n        //     payload: data,\r\n        // });\r\n     } catch (err) {\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_FAIL,\r\n        //     payload: err.response && err.response.data.message ?\r\n        //         err.response.data.message : err.message,\r\n        // });\r\n    }\r\n};\r\n\r\n","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\emailConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\EditCustomersScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CustomersScreen.js",["173","174","175"],"import { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { clientList, invoiceList, oldclient, selectInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\nimport { selectedInvoiceReducer } from \"../reducers/invoiceReducers\";\r\n\r\nfunction CustomersScreen(props) {\r\n  const [selectedClient, setSelectedClient] = useState({});\r\n  const [editFlag, setEditFlag] = useState(false);\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;  \r\n  \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(clientList());\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo ) {\r\n      props.history.push('/');\r\n    }\r\n  }, [props.history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (editFlag) {\r\n      dispatch(oldclient(selectedClient));\r\n      props.history.push('/customers/edit');\r\n    }\r\n    setEditFlag(false);\r\n  }, [dispatch, props.history, selectedClient,editFlag]);\r\n\r\n  const clientsInfo = useSelector((state) => state.clientInfo.clientsList);\r\n  const editCustomer = (index) => {\r\n    setSelectedClient(clientsInfo.clients[index]);\r\n\r\n  }\r\n\r\n  return (\r\n      <>\r\n      <Header />\r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i class=\"fas fa-users\"></i>\r\n                  &nbsp;Customers\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Customers list\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {clientsInfo ?\r\n            <ul className=\"list\">\r\n              {clientsInfo.clients.map((v, i) =>\r\n                <li key={i}>\r\n                  <div className=\"details\">\r\n                    <div><b>{v.clientName}</b></div>\r\n                    <div>\r\n                      <span className=\"first\">\r\n                        {v.email}\r\n                      </span>\r\n                      <span>\r\n                        {v.phone}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"actions\">\r\n                    <i onClick={() => { editCustomer(i); setEditFlag(true); }} className=\"fas fa-user-edit\" aria-hidden=\"true\" />\r\n                  </div>\r\n                </li>\r\n              )}\r\n                    \r\n            </ul> : <></>}\r\n                </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n    export default CustomersScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripePayment\\StripePayment.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripeCard\\StripeCard.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Payment.js",["176"],"\r\nimport {React,useState} from 'react';\r\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\r\nimport axios from 'axios'\r\nimport StripeCard from './StripeCard/StripeCard';\r\nfunction  Payment() {\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n  \r\n    const handleSubmit = async (event) => {\r\nconsole.log(\"chal rha h\")  \r\n    event.preventDefault();\r\n  \r\n      if (!stripe || !elements) {\r\n      \r\n        return;\r\n      }\r\n  \r\n\r\nconst res=  await axios.post(\"http://localhost:5000/pay\",{email:\"sahheher\"})\r\n const  clientSecret=res.data[\"client_secret\"];\r\nconsole.log(  \"lali\", clientSecret)\r\n\r\n      const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n          billing_details: {\r\n            email: 'Jenny Rosen',\r\n          },\r\n        }\r\n      });\r\n  \r\n      if (result.error) {\r\n        // Show error to your customer (e.g., insufficient funds)\r\n        console.log(result.error.message);\r\n      } else {\r\n        // The payment has been processed!\r\n        if (result.paymentIntent.status === 'succeeded') {\r\n         console.log(\"data agy\")\r\n        }\r\n      }\r\n    };\r\n  \r\n    return (\r\n        <>\r\n        <StripeCard/>\r\n        <button onClick={handleSubmit}>pay</button>\r\n        </>\r\n    );\r\n  }\r\n  export default Payment;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\TestPDF.js",["177"],"import React from 'react'\r\nimport Example from '../components/ComponentToPrint'\r\nimport ComponentToPrint from '../components/ComponentToPrint'\r\n\r\nfunction TestPDF() {\r\n    return (\r\n        <div>\r\n            <Example />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestPDF\r\n","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\ComponentToPrint.js",["178","179"],"import React, { useRef } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport GenerateInvoice from \"../screens/GenerateInvoice/GenerateInvoice\";\r\n\r\nclass ComponentToPrint extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <div style={{ fontSize: \"40px\", color: \"green\" }}>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Pretium\r\n          viverra suspendisse potenti nullam ac tortor vitae purus faucibus. Eu\r\n          lobortis elementum nibh tellus. Urna molestie at elementum eu\r\n          facilisis sed odio morbi quis. Et molestie ac feugiat sed lectus\r\n          vestibulum mattis ullamcorper. Ut tellus elementum sagittis vitae et.\r\n          Leo urna molestie at elementum. Vestibulum rhoncus est pellentesque\r\n          elit ullamcorper dignissim. Sollicitudin nibh sit amet commodo nulla\r\n          facilisi. Amet luctus venenatis lectus magna. Ultricies integer quis\r\n          auctor elit sed vulputate mi.\r\n        </div>\r\n        <div style={{ color: \"blue\" }}>\r\n          Characteristics of active learning 1. You look for ways of being more\r\n          involved in what you are learning. 2. You are engaged in the whole\r\n          learning process (and in a position to see why information has been\r\n          selected). 3. You look for links between different things that you\r\n          discover. 4. You make a conscious effort to make sense of, and find\r\n          meaning in, what you learn. Understanding is usually deeper. 5. You\r\n          are involved in reflection and self-evaluation. 6. Your attention span\r\n          is longer because your mind is more fully engaged. 7. Long-term memory\r\n          is assisted. If you understand what you learn, and keep relating what\r\n          you learn to what you already know, you are more likely to remember\r\n          what you have learnt. 8. Linking information helps you to see how you\r\n          can apply it to different situations. 9. Learning is personalised and\r\n          interesting.\r\n        </div>\r\n        <img\r\n          width=\"100%\"\r\n          src=\"https://honglytech.com/wp-content/uploads/2020/06/laptop-coffee-arm-1205256.jpg\"\r\n        alt=\"\" /> */}\r\n<div>\r\n            <div class=\"view view-main\">\r\n                <div class=\"pages\">\r\n                    <div data-page=\"about\" class=\"page\">\r\n                        <div class=\"page-content\">\r\n                            <div id=\"ctl04_dvpanel\" class=\"container-fluid tab-pane\">\r\n                                <div class=\"second\">\r\n                                    <div class=\"dvMainInvoice\">\r\n                                        <section id=\"memo\">\r\n                                            <div>\r\n                                                <img src=\"https://onlinepayment.webnapp.com.au/img/logo.jpeg\" id=\"ctl04_logo\" alt=\"logo\" />\r\n                                            </div>\r\n                                                <div class=\"second\">\r\n                                                    <span><b>Email: </b>\r\n                                                        <span id=\"ctl04_lblCompanyEmail\">aussiesmarketplace@gmail.com</span>\r\n                                                    </span>\r\n                                                    <span><b>Phone: </b>\r\n                                                        <span id=\"ctl04_lblCompanyPhone\">0430496430</span>\r\n                                                    </span>\r\n                                                    <span><b>ABN: </b>\r\n                                                        <span id=\"ctl04_lblCompanyABN\">31251544956</span>\r\n                                                    </span>\r\n                                                </div>\r\n                                        </section>\r\n                                        <hr />\r\n                                        <div class=\"clearfix\">\r\n                                        </div>\r\n                                        <div class=\"inv-details\">\r\n                                            <section class=\"invoice-section section\">\r\n                                                <div class=\"first\">Invoice</div>\r\n                                                <div class=\"second\">\r\n                                                    <span><b>Date: </b>\r\n                                                        <span id=\"ctl04_lblDate\">12/02/2021</span>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div class=\"second\">\r\n                                                    <span><b>Invoice # </b>\r\n                                                        <span id=\"ctl04_lblOrderNo\">INV2265</span>\r\n                                                    </span>\r\n                                                </div>\r\n                                            </section>\r\n                                            <section class=\"invoice-section section\">\r\n                                                <div class=\"first\">Customer Details</div>\r\n                                                <div>\r\n                                                    <span class=\"second\">\r\n                                                        <b>Company Name: </b>\r\n                                                        <span>XZ Exports</span>\r\n                                                    </span></div>\r\n                                                <div><span class=\"second\">\r\n                                                    <b>Name: </b>\r\n                                                    <span>Shayan Ali</span>\r\n                                                </span></div>\r\n                                                <div><span class=\"second\">\r\n                                                    <b>Email: </b><span id=\"ctl04_lblClientEmail\">shayanali4@live.com</span></span></div><div><span class=\"second\"><b>Phone: </b><span id=\"ctl04_lblClientPhone\">54241422425</span></span></div><div><span class=\"second\"><b>ABN: </b><span id=\"ctl04_lblClientABN\">564454548864</span></span></div></section></div><div class=\"clearfix\"></div><div class=\"below\"><div><span id=\"ctl04_lblGST\" >GST is included in the quote* </span><span>    prices are in AUD</span></div></div><section class=\"items\"><table id=\"tblSearch\" class=\"table table-hover nowrap\"><thead ><tr><th class=\"first\" ><div >Description</div></th><th class=\"second\" ><div >Price</div></th></tr></thead><tbody><tr><td class=\"first\">this is long description</td><td class=\"second\">$85</td></tr><tr><td class=\"first\">this is long description</td><td class=\"second\">$85</td></tr><tr><td class=\"first\">this is long description</td><td class=\"second\">$85</td></tr></tbody></table></section><section class=\"sums\"><table class=\"first1 \"><tbody class=\" mob\"><tr class=\"amount-total  mob\"><td class=\"second\">Total: $<span id=\"ctl04_lblTotalAmount\">255</span></td></tr><tr id=\"ctl04_gstpanel\" class=\"amount-total\"><td class=\"second\">GST: $<span id=\"ctl04_lblGSTAmount\">23.18</span></td></tr><tr class=\"amount-total\"><td class=\"third\">Amount Paid: $<span id=\"ctl04_lblPaidAmount\">100</span></td></tr><tr class=\"amount-total\"><td class=\"third\">Balance Amount: $<span id=\"ctl04_lblBalanceAmount\">155</span></td></tr></tbody></table><div class=\"payment-info\"></div></section><br /><a class=\"download-btn\" href=\"/pdf\">CLICK HERE TO DOWNLOAD YOUR INVOICE</a><br /><br /><section><div class=\"paywithstripe\"><p>Would you like to pay using your Debit/Credit Card?</p><div><span><input id=\"pay-yes\" type=\"radio\" name=\"pay-now\" value=\"yes\" /><label for=\"pay-yes\">Yes</label></span><span><input id=\"pay-no\" type=\"radio\" name=\"pay-now\" value=\"no\" checked=\"\" /><label for=\"pay-no\">No</label></span></div></div></section><br /><section class=\"admin-use\"><h4>For Admin Use Only</h4><p>Send directly to your customer</p><div class=\"send\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#smsModal\">Send SMS</button><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#emailModal\">Send Email</button><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#paymentModal\">Received Payment</button></div><div id=\"smsModal\" class=\"modal \"><div class=\"modal-content\"><div class=\"modal-header\"><span class=\"close\">×</span><h2>Send SMS</h2></div><div class=\"modal-body\"><div class=\"bitly\"><p><b>Bitly Url :</b></p><button>Generate Url</button></div></div><div class=\"modal-footer\"><button>Send</button></div></div></div><div id=\"emailModal\" class=\"modal \"><div class=\"modal-content\"><div class=\"modal-header\"><span class=\"close\">×</span><h2>Send Email</h2></div><div class=\"modal-body\"><div class=\"message\"><p><b>Enter Message :</b></p><textarea placeholder=\"Enter Message\"></textarea></div></div><div class=\"modal-footer\"><button>Send</button></div></div></div><div id=\"paymentModal\" class=\"modal \"><div class=\"modal-content\"><div class=\"modal-header\"><span class=\"close\">×</span><h4>Received Payment</h4></div><div class=\"modal-body\"><div class=\"received-payment\"><form><span><label for=\"payment-option\"><b>Paayment Method: </b></label><select required=\"\" id=\"payment-option\"><option value=\"\" default=\"\">Please select payment option</option><option value=\"Cash\">Cash</option><option value=\"Cheque\">Cheque</option><option value=\"Bank Transfer\">Bank Transfer</option><option value=\"Stripe\">Stripe</option><option value=\"EFPOS\">EFPOS</option></select></span><span class=\"rec-payment-input\"><label for=\"received-payment\"><b>Value: </b></label><input required=\"\" max=\"155\" min=\"0\" id=\"received-payment\" type=\"number\" placeholder=\"Enter received value\" value=\"\" /></span></form></div><div><table id=\"tblSearch\" class=\"table table-hover nowrap my-3\"><thead ><tr><th class=\"first\" >Date</th><th class=\"second\" >Payment Method</th><th class=\"second\" >Payment Received</th></tr></thead><tbody><tr><td class=\"first\" >11/3/2021 , 10:56 am</td><td class=\"second\" >Cash</td><td class=\"second\" >$50</td></tr><tr><td class=\"first\" >12/3/2021 , 12:12 pm</td><td class=\"second\" >Cash</td><td class=\"second\" >$50</td></tr></tbody></table></div><div class=\"amount-details\"><div><p><b>Total Amount :</b></p><p>$255</p></div><div><p><b>Paid Amount :</b></p><p>$100</p></div><div><p><b>Balance Amount :</b></p><p>$155</p></div></div></div><div class=\"modal-footer\"></div></div></div></section>\r\n\r\n                                        \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Example = () => {\r\n  const componentRef = useRef();\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ComponentToPrint ref={componentRef} />\r\n      <button onClick={handlePrint}>Print this out!</button>\r\n    </div>\r\n  );\r\n};\r\nexport default Example;\r\n// render(<Example />, document.querySelector(\"#root\"));",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":11,"column":10,"nodeType":"186","messageId":"187","endLine":11,"endColumn":26},{"ruleId":"184","severity":1,"message":"188","line":11,"column":28,"nodeType":"186","messageId":"187","endLine":11,"endColumn":47},{"ruleId":"189","severity":1,"message":"190","line":71,"column":19,"nodeType":"186","endLine":71,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":77,"column":19,"nodeType":"186","endLine":77,"endColumn":34},{"ruleId":"184","severity":1,"message":"191","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":19},{"ruleId":"184","severity":1,"message":"192","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":25},{"ruleId":"184","severity":1,"message":"193","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":32},{"ruleId":"184","severity":1,"message":"194","line":44,"column":9,"nodeType":"186","messageId":"187","endLine":44,"endColumn":22},{"ruleId":"184","severity":1,"message":"195","line":1,"column":319,"nodeType":"186","messageId":"187","endLine":1,"endColumn":336},{"ruleId":"184","severity":1,"message":"196","line":1,"column":338,"nodeType":"186","messageId":"187","endLine":1,"endColumn":358},{"ruleId":"184","severity":1,"message":"197","line":1,"column":360,"nodeType":"186","messageId":"187","endLine":1,"endColumn":380},{"ruleId":"184","severity":1,"message":"198","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":21},{"ruleId":"184","severity":1,"message":"199","line":9,"column":29,"nodeType":"186","messageId":"187","endLine":9,"endColumn":51},{"ruleId":"184","severity":1,"message":"200","line":12,"column":28,"nodeType":"186","messageId":"187","endLine":12,"endColumn":46},{"ruleId":"184","severity":1,"message":"201","line":12,"column":48,"nodeType":"186","messageId":"187","endLine":12,"endColumn":69},{"ruleId":"184","severity":1,"message":"202","line":13,"column":5,"nodeType":"186","messageId":"187","endLine":13,"endColumn":23},{"ruleId":"184","severity":1,"message":"203","line":163,"column":17,"nodeType":"186","messageId":"187","endLine":163,"endColumn":21},{"ruleId":"184","severity":1,"message":"204","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":13},{"ruleId":"184","severity":1,"message":"205","line":8,"column":10,"nodeType":"186","messageId":"187","endLine":8,"endColumn":25},{"ruleId":"184","severity":1,"message":"206","line":11,"column":8,"nodeType":"186","messageId":"187","endLine":11,"endColumn":21},{"ruleId":"184","severity":1,"message":"207","line":13,"column":8,"nodeType":"186","messageId":"187","endLine":13,"endColumn":16},{"ruleId":"189","severity":1,"message":"208","line":105,"column":8,"nodeType":"209","endLine":105,"endColumn":21,"suggestions":"210"},{"ruleId":"184","severity":1,"message":"211","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":25},{"ruleId":"184","severity":1,"message":"212","line":3,"column":27,"nodeType":"186","messageId":"187","endLine":3,"endColumn":45},{"ruleId":"184","severity":1,"message":"213","line":3,"column":47,"nodeType":"186","messageId":"187","endLine":3,"endColumn":65},{"ruleId":"184","severity":1,"message":"203","line":7,"column":17,"nodeType":"186","messageId":"187","endLine":7,"endColumn":21},{"ruleId":"184","severity":1,"message":"214","line":3,"column":22,"nodeType":"186","messageId":"187","endLine":3,"endColumn":33},{"ruleId":"184","severity":1,"message":"215","line":3,"column":46,"nodeType":"186","messageId":"187","endLine":3,"endColumn":59},{"ruleId":"184","severity":1,"message":"193","line":5,"column":10,"nodeType":"186","messageId":"187","endLine":5,"endColumn":32},{"ruleId":"184","severity":1,"message":"216","line":2,"column":15,"nodeType":"186","messageId":"187","endLine":2,"endColumn":23},{"ruleId":"184","severity":1,"message":"217","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":24},{"ruleId":"184","severity":1,"message":"218","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":16},{"ruleId":"184","severity":1,"message":"219","line":4,"column":8,"nodeType":"186","messageId":"187","endLine":4,"endColumn":23},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"no-unused-vars","'shortDescription' is assigned a value but never used.","Identifier","unusedVar","'setShortDescription' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'tempService' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useEffect' is defined but never used.","'getSettingsInfo' is defined but never used.","'selectedInvoiceReducer' is defined but never used.","'deleteInvoice' is assigned a value but never used.","'SERVICE_SAVE_FAIL' is defined but never used.","'SERVICE_SAVE_REQUEST' is defined but never used.","'SERVICE_SAVE_SUCCESS' is defined but never used.","'useSelector' is defined but never used.","'UPDATE_PAYMENT_SUCCESS' is defined but never used.","'SETTINGS_INFO_FAIL' is defined but never used.","'SETTINGS_SAVE_SUCCESS' is defined but never used.","'SETTINGS_SAVE_FAIL' is defined but never used.","'data' is assigned a value but never used.","'Modal' is defined but never used.","'settingsReducer' is defined but never used.","'StripePayment' is defined but never used.","'ReactPDF' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'invoice.selectedInvoice', 'payDate', 'payMethod', and 'payValue'. Either include them or remove the dependency array.","ArrayExpression",["222"],"'EMAIL_SEND_FAIL' is defined but never used.","'EMAIL_SEND_REQUEST' is defined but never used.","'EMAIL_SEND_SUCCESS' is defined but never used.","'invoiceList' is defined but never used.","'selectInvoice' is defined but never used.","'useState' is defined but never used.","'ComponentToPrint' is defined but never used.","'render' is defined but never used.","'GenerateInvoice' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},"Update the dependencies array to be: [dispatch, invoice.selectedInvoice, payDate, payMethod, payValue, paymentList]",{"range":"225","text":"226"},[3669,3682],"[dispatch, invoice.selectedInvoice, payDate, payMethod, payValue, paymentList]"]