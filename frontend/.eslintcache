[{"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js":"1","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js":"2","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js":"3","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js":"4","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js":"5","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js":"6","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js":"7","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js":"8","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js":"9","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js":"10","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js":"11","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js":"12","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js":"13","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js":"14","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js":"15","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js":"16","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js":"17","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js":"18","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js":"19","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js":"20","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js":"21","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js":"22","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js":"23","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js":"24","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\emailActions.js":"25","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\emailConstants.js":"26","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\EditCustomersScreen.js":"27","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CustomersScreen.js":"28","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripePayment\\StripePayment.js":"29","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripeCard\\StripeCard.js":"30","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Payment.js":"31"},{"size":617,"mtime":1614052918248,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1611774201000,"results":"34","hashOfConfig":"33"},{"size":652,"mtime":1615440971405,"results":"35","hashOfConfig":"33"},{"size":1761,"mtime":1615434174174,"results":"36","hashOfConfig":"33"},{"size":6000,"mtime":1615169762647,"results":"37","hashOfConfig":"33"},{"size":4376,"mtime":1615169427364,"results":"38","hashOfConfig":"33"},{"size":2348,"mtime":1615433624146,"results":"39","hashOfConfig":"33"},{"size":2095,"mtime":1615433624067,"results":"40","hashOfConfig":"33"},{"size":7746,"mtime":1615433624090,"results":"41","hashOfConfig":"33"},{"size":4767,"mtime":1615448992878,"results":"42","hashOfConfig":"33"},{"size":6246,"mtime":1615448555384,"results":"43","hashOfConfig":"33"},{"size":1268,"mtime":1615365860695,"results":"44","hashOfConfig":"33"},{"size":635,"mtime":1614053213717,"results":"45","hashOfConfig":"33"},{"size":214,"mtime":1614053398888,"results":"46","hashOfConfig":"33"},{"size":119,"mtime":1615432736984,"results":"47","hashOfConfig":"33"},{"size":2000,"mtime":1615433624032,"results":"48","hashOfConfig":"33"},{"size":190,"mtime":1608907475781,"results":"49","hashOfConfig":"33"},{"size":187,"mtime":1607771183599,"results":"50","hashOfConfig":"33"},{"size":5217,"mtime":1615433624064,"results":"51","hashOfConfig":"33"},{"size":1619,"mtime":1615433624059,"results":"52","hashOfConfig":"33"},{"size":11414,"mtime":1615433624030,"results":"53","hashOfConfig":"33"},{"size":21682,"mtime":1615442142406,"results":"54","hashOfConfig":"33"},{"size":406,"mtime":1614911174714,"results":"55","hashOfConfig":"33"},{"size":1598,"mtime":1614315326603,"results":"56","hashOfConfig":"33"},{"size":846,"mtime":1615186965266,"results":"57","hashOfConfig":"33"},{"size":163,"mtime":1615186636916,"results":"58","hashOfConfig":"33"},{"size":4829,"mtime":1615440718764,"results":"59","hashOfConfig":"33"},{"size":2635,"mtime":1615433624066,"results":"60","hashOfConfig":"33"},{"size":518,"mtime":1615433624055,"results":"61","hashOfConfig":"33"},{"size":1827,"mtime":1615441159313,"results":"62","hashOfConfig":"33"},{"size":1372,"mtime":1615434139846,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"556jn6",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js",[],["132","133"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js",["134","135","136","137"],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { serviceList, newInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction InvoiceDetailsScreen(props) {\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;  \r\n  // const [services, setServices] = useState([]);\r\n\r\n  const [shortDescription, setShortDescription] = useState('');\r\n  const [longDescription, setLongDescription] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const [serviceIndex, setServiceIndex] = useState();\r\n  // const [invoice, setInvoice] = useState({});\r\n  const [selectedService, setSelectedService] = useState({\r\n    shortDescription: '',\r\n    longDescription: '',\r\n    price: 0,\r\n    itemNumber:0\r\n  });\r\n  let tempService = {};\r\n  const [itemNumber, setItemNumber] = useState(0);\r\n  const [listItems, setListItems] = useState([]);\r\n  const servicesInfo = useSelector((state) => state.serviceInfo);\r\n  if (servicesInfo.servicesList) {\r\n    // console.log(\"services\", servicesInfo.servicesList)\r\n    // setServices(servicesInfo.servicesList);\r\n  }\r\n\r\n  const selectedClient = useSelector((state) => state.choosenClientInfo);\r\n  const { choosenClient } = selectedClient;    \r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      props.history.push('/');\r\n    }\r\n  }, [props.history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(serviceList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!selectedClient) {\r\n      props.history.push('/create');\r\n    }\r\n  }, [props.history, selectedClient]);\r\n\r\n  useEffect(() => {\r\n    if (servicesInfo.servicesList) {\r\n      setSelectedService(servicesInfo.servicesList[serviceIndex]);\r\n    }\r\n          // setLongDescription(selectedService.longDescription);\r\n    // console.log(\"serv\", selectedService);\r\n\r\n  }, [serviceIndex, servicesInfo]);\r\n  \r\n  useEffect(() => {\r\n    if (selectedService) {\r\n      setLongDescription(selectedService.longDescription);\r\n      setPrice(selectedService.price)\r\n      console.log(\"serv\", selectedService);\r\n    }\r\n\r\n  }, [serviceIndex,selectedService])\r\n  useEffect(() => {\r\n    tempService = selectedService;\r\n    tempService.longDescription = longDescription;\r\n    setSelectedService(tempService)\r\n  }, [longDescription]);\r\n\r\n  useEffect(() => {\r\n    tempService = selectedService;\r\n    tempService.price = price;\r\n    setSelectedService(tempService)\r\n  }, [price]);\r\n\r\n  const addToList = () => {\r\n    setItemNumber(itemNumber+1)\r\n    const tempService = servicesInfo.servicesList[serviceIndex];\r\n    setListItems(prevArray => [...prevArray, {\r\n      shortDescription: tempService.shortDescription,\r\n      longDescription: tempService.longDescription,\r\n      price: tempService.price,\r\n      itemNumber: itemNumber\r\n    }]);\r\n  }\r\n\r\n  // console.log(selectedService);\r\n  // const addToList = () => {\r\n  //   setListItems(prevArray => [...prevArray, selectedService]);\r\n  // }\r\n\r\n  const removeFromList = (index) => {\r\n    const removedItem = listItems.splice(index,1);\r\n    setListItems(listItems.filter(x=>x.itemNumber!==removedItem[0].itemNumber));\r\n    // const tempList = listItems;\r\n    // const newList = delete tempList[index];\r\n    console.log(removedItem);\r\n\r\n  }\r\n  console.log(\"list items\",listItems)\r\n  const submitHandler = () => {\r\n\r\n    const generatedInvoice = {\r\n      clientName: choosenClient.clientName,\r\n      email: choosenClient.email,\r\n      phone: choosenClient.phone,\r\n      address: choosenClient.address,\r\n      ABN: choosenClient.ABN,\r\n      listItems: listItems,\r\n    };\r\n    dispatch(newInvoice(generatedInvoice));\r\n\r\n    props.history.push('/generate');\r\n  }\r\n    return (\r\n      <>\r\n        <Header />\r\n      \r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i className=\"fa fa-plus\" aria-hidden=\"true\" />\r\n                  &nbsp;Create Invoice\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Enter invoice details here\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {choosenClient ?\r\n          <div className=\"client-details\">\r\n                    <div>\r\n                      <label>Name :</label>\r\n                      <p>{choosenClient.clientName}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>Email :</label>\r\n                      <p>{choosenClient.email}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>Phone :</label>\r\n                      <p>{choosenClient.phone}</p>\r\n                    </div>\r\n                    <div>\r\n                      <label>ABN :</label>\r\n                      <p>{choosenClient.ABN}</p>\r\n                    </div>\r\n            </div> : <></>}\r\n          \r\n          {listItems.length !== 0 ?\r\n            <ul className=\"list\">\r\n              {listItems.map((v, i) =>\r\n                <li key={i}>\r\n\r\n                <div className=\"details\">\r\n                  <div><b>{v.shortDescription}</b></div>\r\n                  <div>\r\n\r\n                      {v.longDescription} <b>( $ {v.price} )</b>\r\n                  </div>\r\n                </div>\r\n                <div className=\"actions\">\r\n                    <i onClick={() => removeFromList(i)}\r\n                      className=\"fa fa-trash\" aria-hidden=\"true\" />\r\n                </div>\r\n              </li>\r\n              )}        \r\n            </ul> : <></>}\r\n                  <div className=\"contactform\" id=\"dvform\">\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"Select Client\">Invoice Service: </label>\r\n              <select onChange={(e) =>setServiceIndex(e.target.value) }\r\n                className=\"form-select form-select-sm\" aria-label=\".form-select-sm example\">\r\n                <option defaultValue>Please select invoice service</option>\r\n                        {servicesInfo.servicesList? <>\r\n                          {servicesInfo.servicesList.map((v, i) =>\r\n                            <option key={i} id={i} value={i}>{v.shortDescription}</option>\r\n                        )}\r\n                        </>\r\n                    : <></>}\r\n                      </select>\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"description\">Description: </label>\r\n                    <textarea onChange={(e) => setLongDescription(e.target.value)} value={longDescription}\r\n                      name=\"description\" id=\"description\" rows={10} placeholder=\"Enter description\" />\r\n                    </div>\r\n                    <div className=\"form_row\">\r\n                      <label htmlFor=\"amount\">Amount: </label>\r\n                <input onChange={(e) => setPrice(e.target.value)} value={price}\r\n                  type=\"number\" name=\"amount\" id=\"amount\" placeholder=\"Enter Amount\" className=\"form_input required\" />\r\n                    </div>\r\n                    <input onClick={()=>addToList()} type=\"button\" id=\"add\" name=\"submit\" className=\"form_submit\" defaultValue=\"Add List Item\" />\r\n                    <button onClick={()=>submitHandler()} className='generate-inv-btn'>Generate Invoice</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n\r\n    );\r\n  }\r\nexport default InvoiceDetailsScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js",["138","139"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js",["140","141"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js",["142","143","144"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js",["145","146","147","148","149","150"],"import Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { serverAddress } from \"../constants/dbConstants\";\r\nimport { CLIENT_LIST_FAIL, CLIENT_LIST_REQUEST, CLIENT_LIST_SUCCESS, CLIENT_SAVE_FAIL, CLIENT_SAVE_REQUEST, CLIENT_SAVE_SUCCESS, INVOICE_LIST_FAIL, INVOICE_LIST_REQUEST, INVOICE_LIST_SUCCESS, INVOICE_SAVE_FAIL, INVOICE_SAVE_REQUEST, INVOICE_SAVE_SUCCESS, SERVICE_LIST_FAIL, SERVICE_LIST_REQUEST, SERVICE_LIST_SUCCESS, SERVICE_SAVE_FAIL, SERVICE_SAVE_REQUEST, SETTINGS_INFO_REQUEST, SETTINGS_INFO_SUCCESS, SETTINGS_INFO_FAIL, SETTINGS_SAVE_SUCCESS, SETTINGS_SAVE_FAIL, SETTINGS_SAVE_REQUEST } from \"../constants/invoiceConstants\";\r\n\r\n\r\n// Client Actions\r\n \r\n// Get Existing Clients List\r\nexport const clientList = (userName, password) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients`, { companyId });\r\n        dispatch({\r\n            type: CLIENT_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n        localStorage.setItem('clientsInfo', JSON.stringify(data));\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Old Client\r\nexport const oldclient = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CLIENT_SAVE_SUCCESS,\r\n        payload: data,\r\n    });\r\n};\r\n\r\n// New Client\r\nexport const newclient = (clientName, companyName, email, address, phone, ABN ) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_SAVE_REQUEST,\r\n        payload: {\r\n            companyId,\r\n            clientName,\r\n            companyName,\r\n            email,\r\n            address,\r\n            phone,\r\n            ABN \r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients/create`, { companyId, clientName, companyName, email, address, phone, ABN });\r\n        console.log(\"client received==>\",data)\r\n        dispatch({\r\n            type: CLIENT_SAVE_SUCCESS,\r\n            payload: data.selectedClient[0],\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Services\r\n\r\n// Get Existing Services List\r\nexport const serviceList = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SERVICE_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/services`, { companyId });\r\n        dispatch({\r\n            type: SERVICE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n//New Service\r\nexport const newservice = (shortDescription, longDescription, price) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SERVICE_SAVE_REQUEST,\r\n        payload: {\r\n            shortDescription,\r\n            longDescription,\r\n            price\r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/services/create`, { companyId, shortDescription, longDescription, price });\r\n\r\n        dispatch({\r\n            type: SERVICE_LIST_REQUEST,\r\n    });\r\n        try {\r\n            const { data } = await Axios.post(`${serverAddress}/api/services`, { companyId });\r\n            dispatch({\r\n                type: SERVICE_LIST_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: SERVICE_LIST_FAIL,\r\n                payload: err.response && err.response.data.message ?\r\n                    err.response.data.message : err.message,\r\n            });\r\n        }\r\n\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// New Invoice\r\nexport const newInvoice = (invoice) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    // console.log(\"invoice action\", invoice)\r\n    dispatch({\r\n        type: INVOICE_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices/new`, {\r\n            companyId: companyId,\r\n            clientName: invoice.clientName,\r\n            email: invoice.email,\r\n            phone: invoice.phone,\r\n            address: invoice.address,\r\n            ABN: invoice.ABN,\r\n            listItems: invoice.listItems\r\n        });\r\n        console.log(\"new invoice action\",invoice)\r\n        console.log('created Innvoice abc received ',data)\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"error\",err)\r\n        dispatch({\r\n            type: INVOICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Invoices List\r\nexport const invoiceList = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: INVOICE_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices`, { companyId });\r\n        dispatch({\r\n            type: INVOICE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: INVOICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Select Invoice\r\nexport const selectInvoice = (invoice) => async (dispatch) => {\r\n    console.log(\"select iv action==>\",invoice)\r\n    dispatch({\r\n        type: INVOICE_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: invoice,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: INVOICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Settings Info\r\nexport const getSettingsInfo = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SETTINGS_INFO_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/settings`, { companyId });\r\n        dispatch({\r\n            type: SETTINGS_INFO_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// // Update Settings\r\nexport const updateSettings = (stripeKey, invoiceFooter, emailTemplate, smsTemplate) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    // console.log(\"invoice action\", invoice)\r\n    dispatch({\r\n        type: SETTINGS_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/settings/update`, { companyId,stripeKey,invoiceFooter,emailTemplate,smsTemplate });\r\n        dispatch({\r\n            type: SETTINGS_INFO_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js",["151","152","153","154","155"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\emailActions.js",["156","157","158","159"],"import Axios from \"axios\";\r\nimport { serverAddress } from \"../constants/dbConstants\";\r\nimport { EMAIL_SEND_FAIL, EMAIL_SEND_REQUEST, EMAIL_SEND_SUCCESS } from \"../constants/emailConstants\";\r\n\r\nexport const sendEmailBackend = (receiver, message) => async (dispatch) => {\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/email`, { receiver, message });\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_REQUEST,\r\n        //     payload: data,\r\n        // });\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_SUCCESS,\r\n        //     payload: data,\r\n        // });\r\n     } catch (err) {\r\n        // dispatch({\r\n        //     type: EMAIL_SEND_FAIL,\r\n        //     payload: err.response && err.response.data.message ?\r\n        //         err.response.data.message : err.message,\r\n        // });\r\n    }\r\n};\r\n\r\n","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\emailConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\EditCustomersScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CustomersScreen.js",["160","161","162"],"import { useEffect, useState } from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { clientList, invoiceList, oldclient, selectInvoice } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\nimport { selectedInvoiceReducer } from \"../reducers/invoiceReducers\";\r\n\r\nfunction CustomersScreen(props) {\r\n  const [selectedClient, setSelectedClient] = useState({});\r\n  const [editFlag, setEditFlag] = useState(false);\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;  \r\n  \r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(clientList());\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!userInfo ) {\r\n      props.history.push('/');\r\n    }\r\n  }, [props.history, userInfo]);\r\n\r\n  useEffect(() => {\r\n    if (editFlag) {\r\n      dispatch(oldclient(selectedClient));\r\n      props.history.push('/customers/edit');\r\n    }\r\n    setEditFlag(false);\r\n  }, [dispatch, props.history, selectedClient,editFlag]);\r\n\r\n  const clientsInfo = useSelector((state) => state.clientInfo.clientsList);\r\n  const editCustomer = (index) => {\r\n    setSelectedClient(clientsInfo.clients[index]);\r\n\r\n  }\r\n\r\n  return (\r\n      <>\r\n      <Header />\r\n              <div id=\"pages_maincontent\">\r\n                <h2 className=\"page_title\" >\r\n                  <i onClick={props.history.goBack} className=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n                  <i class=\"fas fa-users\"></i>\r\n                  &nbsp;Customers\r\n                </h2>\r\n                <h3 id=\"dvResellerName\" >\r\n                  Customers list\r\n                </h3>\r\n        <div className=\"page_single layout_fullwidth_padding\">\r\n          {clientsInfo ?\r\n            <ul className=\"list\">\r\n              {clientsInfo.clients.map((v, i) =>\r\n                <li key={i}>\r\n                  <div className=\"details\">\r\n                    <div><b>{v.clientName}</b></div>\r\n                    <div>\r\n                      <span className=\"first\">\r\n                        {v.email}\r\n                      </span>\r\n                      <span>\r\n                        {v.phone}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"actions\">\r\n                    <i onClick={() => { editCustomer(i); setEditFlag(true); }} className=\"fas fa-user-edit\" aria-hidden=\"true\" />\r\n                  </div>\r\n                </li>\r\n              )}\r\n                    \r\n            </ul> : <></>}\r\n                </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n    export default CustomersScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripePayment\\StripePayment.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\StripeCard\\StripeCard.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Payment.js",["163"],"\r\nimport {React,useState} from 'react';\r\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\r\nimport axios from 'axios'\r\nimport StripeCard from './StripeCard/StripeCard';\r\nfunction  Payment() {\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n  \r\n    const handleSubmit = async (event) => {\r\nconsole.log(\"chal rha h\")  \r\n    event.preventDefault();\r\n  \r\n      if (!stripe || !elements) {\r\n      \r\n        return;\r\n      }\r\n  \r\n\r\nconst res=  await axios.post(\"http://localhost:5000/pay\",{email:\"sahheher\"})\r\n const  clientSecret=res.data[\"client_secret\"];\r\nconsole.log(  \"lali\", clientSecret)\r\n\r\n      const result = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n          billing_details: {\r\n            email: 'Jenny Rosen',\r\n          },\r\n        }\r\n      });\r\n  \r\n      if (result.error) {\r\n        // Show error to your customer (e.g., insufficient funds)\r\n        console.log(result.error.message);\r\n      } else {\r\n        // The payment has been processed!\r\n        if (result.paymentIntent.status === 'succeeded') {\r\n         console.log(\"data agy\")\r\n        }\r\n      }\r\n    };\r\n  \r\n    return (\r\n        <>\r\n        <StripeCard/>\r\n        <button onClick={handleSubmit}>pay</button>\r\n        </>\r\n    );\r\n  }\r\n  export default Payment;",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":11,"column":10,"nodeType":"170","messageId":"171","endLine":11,"endColumn":26},{"ruleId":"168","severity":1,"message":"172","line":11,"column":28,"nodeType":"170","messageId":"171","endLine":11,"endColumn":47},{"ruleId":"173","severity":1,"message":"174","line":71,"column":19,"nodeType":"170","endLine":71,"endColumn":34},{"ruleId":"173","severity":1,"message":"174","line":77,"column":19,"nodeType":"170","endLine":77,"endColumn":34},{"ruleId":"168","severity":1,"message":"175","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":19},{"ruleId":"168","severity":1,"message":"176","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":25},{"ruleId":"168","severity":1,"message":"177","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":32},{"ruleId":"168","severity":1,"message":"178","line":44,"column":9,"nodeType":"170","messageId":"171","endLine":44,"endColumn":22},{"ruleId":"168","severity":1,"message":"179","line":1,"column":319,"nodeType":"170","messageId":"171","endLine":1,"endColumn":336},{"ruleId":"168","severity":1,"message":"180","line":1,"column":338,"nodeType":"170","messageId":"171","endLine":1,"endColumn":358},{"ruleId":"168","severity":1,"message":"181","line":1,"column":360,"nodeType":"170","messageId":"171","endLine":1,"endColumn":380},{"ruleId":"168","severity":1,"message":"182","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":21},{"ruleId":"168","severity":1,"message":"183","line":9,"column":29,"nodeType":"170","messageId":"171","endLine":9,"endColumn":51},{"ruleId":"168","severity":1,"message":"184","line":12,"column":28,"nodeType":"170","messageId":"171","endLine":12,"endColumn":46},{"ruleId":"168","severity":1,"message":"185","line":12,"column":48,"nodeType":"170","messageId":"171","endLine":12,"endColumn":69},{"ruleId":"168","severity":1,"message":"186","line":13,"column":5,"nodeType":"170","messageId":"171","endLine":13,"endColumn":23},{"ruleId":"168","severity":1,"message":"187","line":163,"column":17,"nodeType":"170","messageId":"171","endLine":163,"endColumn":21},{"ruleId":"168","severity":1,"message":"188","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":14},{"ruleId":"168","severity":1,"message":"189","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":13},{"ruleId":"168","severity":1,"message":"190","line":8,"column":10,"nodeType":"170","messageId":"171","endLine":8,"endColumn":25},{"ruleId":"168","severity":1,"message":"191","line":11,"column":8,"nodeType":"170","messageId":"171","endLine":11,"endColumn":21},{"ruleId":"168","severity":1,"message":"192","line":30,"column":10,"nodeType":"170","messageId":"171","endLine":30,"endColumn":17},{"ruleId":"168","severity":1,"message":"193","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":25},{"ruleId":"168","severity":1,"message":"194","line":3,"column":27,"nodeType":"170","messageId":"171","endLine":3,"endColumn":45},{"ruleId":"168","severity":1,"message":"195","line":3,"column":47,"nodeType":"170","messageId":"171","endLine":3,"endColumn":65},{"ruleId":"168","severity":1,"message":"187","line":7,"column":17,"nodeType":"170","messageId":"171","endLine":7,"endColumn":21},{"ruleId":"168","severity":1,"message":"196","line":3,"column":22,"nodeType":"170","messageId":"171","endLine":3,"endColumn":33},{"ruleId":"168","severity":1,"message":"197","line":3,"column":46,"nodeType":"170","messageId":"171","endLine":3,"endColumn":59},{"ruleId":"168","severity":1,"message":"177","line":5,"column":10,"nodeType":"170","messageId":"171","endLine":5,"endColumn":32},{"ruleId":"168","severity":1,"message":"198","line":2,"column":15,"nodeType":"170","messageId":"171","endLine":2,"endColumn":23},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'shortDescription' is assigned a value but never used.","Identifier","unusedVar","'setShortDescription' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'tempService' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useEffect' is defined but never used.","'getSettingsInfo' is defined but never used.","'selectedInvoiceReducer' is defined but never used.","'deleteInvoice' is assigned a value but never used.","'SERVICE_SAVE_FAIL' is defined but never used.","'SERVICE_SAVE_REQUEST' is defined but never used.","'SERVICE_SAVE_SUCCESS' is defined but never used.","'useSelector' is defined but never used.","'UPDATE_PAYMENT_SUCCESS' is defined but never used.","'SETTINGS_INFO_FAIL' is defined but never used.","'SETTINGS_SAVE_SUCCESS' is defined but never used.","'SETTINGS_SAVE_FAIL' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'Modal' is defined but never used.","'settingsReducer' is defined but never used.","'StripePayment' is defined but never used.","'payDate' is assigned a value but never used.","'EMAIL_SEND_FAIL' is defined but never used.","'EMAIL_SEND_REQUEST' is defined but never used.","'EMAIL_SEND_SUCCESS' is defined but never used.","'invoiceList' is defined but never used.","'selectInvoice' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]