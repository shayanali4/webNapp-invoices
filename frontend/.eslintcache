[{"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js":"1","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js":"2","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js":"3","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js":"4","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js":"5","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js":"6","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js":"7","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js":"8","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js":"9","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js":"10","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js":"11","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js":"12","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js":"13","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js":"14","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js":"15","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js":"16","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js":"17","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js":"18","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js":"19","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js":"20","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js":"21","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js":"22","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js":"23","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js":"24"},{"size":617,"mtime":1614052918248,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1611774201000,"results":"27","hashOfConfig":"26"},{"size":355,"mtime":1614242189605,"results":"28","hashOfConfig":"26"},{"size":1336,"mtime":1614241784410,"results":"29","hashOfConfig":"26"},{"size":5973,"mtime":1614675971956,"results":"30","hashOfConfig":"26"},{"size":4372,"mtime":1614911075844,"results":"31","hashOfConfig":"26"},{"size":2362,"mtime":1614311242204,"results":"32","hashOfConfig":"26"},{"size":1892,"mtime":1614839139504,"results":"33","hashOfConfig":"26"},{"size":7598,"mtime":1614923838340,"results":"34","hashOfConfig":"26"},{"size":4407,"mtime":1614839181037,"results":"35","hashOfConfig":"26"},{"size":6346,"mtime":1614928318033,"results":"36","hashOfConfig":"26"},{"size":1268,"mtime":1614835061666,"results":"37","hashOfConfig":"26"},{"size":635,"mtime":1614053213717,"results":"38","hashOfConfig":"26"},{"size":214,"mtime":1614053398888,"results":"39","hashOfConfig":"26"},{"size":119,"mtime":1614941730770,"results":"40","hashOfConfig":"26"},{"size":2009,"mtime":1614056911960,"results":"41","hashOfConfig":"26"},{"size":190,"mtime":1608907475781,"results":"42","hashOfConfig":"26"},{"size":187,"mtime":1607771183599,"results":"43","hashOfConfig":"26"},{"size":4920,"mtime":1614838395266,"results":"44","hashOfConfig":"26"},{"size":1428,"mtime":1614836332136,"results":"45","hashOfConfig":"26"},{"size":9024,"mtime":1614837838564,"results":"46","hashOfConfig":"26"},{"size":15969,"mtime":1614941698338,"results":"47","hashOfConfig":"26"},{"size":406,"mtime":1614911174714,"results":"48","hashOfConfig":"26"},{"size":1598,"mtime":1614315326603,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"556jn6",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\index.js",[],["102","103"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reportWebVitals.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\App.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\config\\AppRouter.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\CreateInvoiceScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ServicesScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\DashboardScreen.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoiceDetailsScreen.js",["104","105","106","107"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\ConfigrationScreen.js",["108","109"],"// import { useHistory } from \"react-router-dom\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSettingsInfo, updateSettings } from \"../actions/invoiceActions\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction ConfigurationScreen(props) {\r\n  \r\n  const settingsInfo = useSelector((state) => state.settingsInfo);\r\n  const { settings } = settingsInfo;\r\n\r\n  \r\n  // console.log('Settings', settings);\r\n  \r\n  const [stripeKey, setStripeKey] = useState(settings.stripeKey);\r\n  const [invoiceFooter, setInvoiceFooter] = useState(settings.invoiceFooter);\r\n  const [emailTemplate, setEmailTemplate] = useState(settings.emailTemplate);\r\n  const [smsTemplate, setSmsTemplate] = useState(settings.smsTemplate);\r\n  \r\n  \r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   dispatch(getSettingsInfo());\r\n    \r\n  // }, [dispatch]);\r\n  \r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateSettings(stripeKey,invoiceFooter,emailTemplate,smsTemplate));\r\n  }\r\n    return (\r\n      <>\r\n        <Header />\r\n        {settingsInfo.settings ?\r\n\r\n          <div id=\"pages_maincontent\">\r\n            <h2 className=\"page_title page1\" >\r\n              <i onClick={props.history.goBack} class=\"fa fa-chevron-left back-ico\" aria-hidden=\"true\"></i>\r\n\r\n              <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\r\n                  &nbsp; Configuration\r\n                </h2>\r\n            <h3 id=\"dvResellerName\" >\r\n              Make changes here\r\n                </h3>\r\n            <div className=\"container-fluid1 container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 main123 \">\r\n                  <form onSubmit={(e)=>submitHandler(e)}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"exampleInputEmail1\">Stripe Secret Key:</label>\r\n                      <input value={stripeKey} onChange={(e)=>setStripeKey(e.target.value)} type=\"key\" placeholder=\"Enter Stripe Secret Key\" className=\"input1\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                    </div>\r\n                    {/* <div className=\"wrapper  wrapper1\" id=\"wrapper\">\r\n                      <label htmlFor=\"yes_no_radio\">GST Included</label>\r\n                      <div >\r\n                        <p >\r\n                          <input type=\"radio\" name=\"yes_no\" defaultChecked />Yes\r\n                            </p> &ensp;\r\n                            <p>\r\n                          <input type=\"radio\" name=\"yes_no\" />No\r\n                            </p>\r\n                      </div>\r\n                    </div> */}\r\n                    <div className=\"form-group from-group1\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">Invoice Footer:</label>\r\n                      <textarea value={invoiceFooter} onChange={(e) => setInvoiceFooter(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <div className=\"form-group from-group1\">\r\n                      <label htmlFor=\"exampleFormControlTextarea1\">Email Template</label>\r\n                      <textarea value={emailTemplate} onChange={(e) => setEmailTemplate(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <div className=\"form-group from-group1\">\r\n                      <label style={{ marginTop: \"50px\" }} htmlFor=\"exampleFormControlTextarea1\">SMS Template</label>\r\n                      <textarea value={smsTemplate} onChange={(e) => setSmsTemplate(e.target.value)}\r\n                        className=\"form-control\" id=\"exampleFormControlTextarea1\" rows={3} defaultValue={\"\"} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"page_single layout_fullwidth_padding\">\r\n                 \r\n              <div className=\"contactform\" id=\"dvform\">\r\n                {/* Add form here */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          : <></>}\r\n      </>\r\n    );\r\n  }\r\n\r\nexport default ConfigurationScreen;","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\InvoicesScreen.js",["110","111","112"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\store.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\userConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\dbConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\userActions.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\LoadingBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\MessageBox.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\reducers\\invoiceReducers.js",["113","114","115"],"import { CLIENT_LIST_FAIL, CLIENT_LIST_REQUEST, CLIENT_LIST_SUCCESS, CLIENT_SAVE_FAIL, CLIENT_SAVE_REQUEST, CLIENT_SAVE_SUCCESS, INVOICE_LIST_FAIL, INVOICE_LIST_REQUEST, INVOICE_LIST_SUCCESS, INVOICE_SAVE_FAIL, INVOICE_SAVE_REQUEST, INVOICE_SAVE_SUCCESS, SERVICE_LIST_FAIL, SERVICE_LIST_REQUEST, SERVICE_LIST_SUCCESS, SERVICE_SAVE_FAIL, SERVICE_SAVE_REQUEST, SERVICE_SAVE_SUCCESS, SETTINGS_INFO_FAIL, SETTINGS_INFO_REQUEST, SETTINGS_INFO_SUCCESS, SETTINGS_SAVE_FAIL, SETTINGS_SAVE_REQUEST, SETTINGS_SAVE_SUCCESS } from \"../constants/invoiceConstants\";\r\n\r\n// Client Reducers\r\n\r\n//Client List\r\nexport const clientListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CLIENT_LIST_REQUEST:\r\n            return { loading: true };\r\n        case CLIENT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                clientsList: action.payload\r\n            };\r\n        case CLIENT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//New Client\r\nexport const saveClient = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case CLIENT_SAVE_REQUEST:\r\n            return { loading: true };\r\n        case CLIENT_SAVE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                choosenClient: action.payload\r\n            };\r\n        case CLIENT_SAVE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Service Reducers\r\n\r\nexport const serviceListReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SERVICE_LIST_REQUEST:\r\n            return { loading: true };\r\n        case SERVICE_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                servicesList: action.payload.services\r\n            };\r\n        case SERVICE_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Select Invoice Reducer\r\nexport const selectedInvoiceReducer = (state = {}, action) => {\r\n    // console.log(\"selected ib=v reducer==>\",action.payload)\r\n    switch (action.type) {\r\n        case INVOICE_SAVE_REQUEST:\r\n            return { loading: true };\r\n        case INVOICE_SAVE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                selectedInvoice: action.payload\r\n            };\r\n        case INVOICE_SAVE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Invoice List\r\nexport const invoiceListReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case INVOICE_LIST_REQUEST:\r\n            return { loading: true };\r\n            \r\n        case INVOICE_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                invoicesList: action.payload\r\n            };\r\n        case INVOICE_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//Settings Reducers\r\n\r\nexport const settingsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SETTINGS_INFO_REQUEST:\r\n            return {\r\n                loading: true,\r\n                settings: {\r\n                    stripeKey: '',\r\n                    invoiceFooter: '',\r\n                    emailTTemplate: '',\r\n                    smsTemplate: ''\r\n                }\r\n            };\r\n        case SETTINGS_INFO_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                settings: action.payload\r\n            };\r\n        case SETTINGS_INFO_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case SETTINGS_SAVE_REQUEST:\r\n            return {\r\n                loading: true,\r\n                settings: {\r\n                    stripeKey: '',\r\n                    invoiceFooter: '',\r\n                    emailTTemplate: '',\r\n                    smsTemplate: ''\r\n                }\r\n            };\r\n        \r\n        case SETTINGS_SAVE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                choosenClient: action.payload\r\n            };\r\n        case SETTINGS_SAVE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n// Save Service\r\n// export const saveService = (state = {}, action) => {\r\n//     switch (action.type) {\r\n//         case SERVICE_SAVE_REQUEST:\r\n//             return { loading: true };\r\n//         case SERVICE_SAVE_SUCCESS:\r\n//             return {\r\n//                 loading: false,\r\n//                 newService: action.payload\r\n//             };\r\n//         case SERVICE_SAVE_FAIL:\r\n//             return { loading: false, error: action.payload };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\constants\\invoiceConstants.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\actions\\invoiceActions.js",["116","117","118","119","120"],"import Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { serverAddress } from \"../constants/dbConstants\";\r\nimport { CLIENT_LIST_FAIL, CLIENT_LIST_REQUEST, CLIENT_LIST_SUCCESS, CLIENT_SAVE_FAIL, CLIENT_SAVE_REQUEST, CLIENT_SAVE_SUCCESS, INVOICE_LIST_FAIL, INVOICE_LIST_REQUEST, INVOICE_LIST_SUCCESS, INVOICE_SAVE_FAIL, INVOICE_SAVE_REQUEST, INVOICE_SAVE_SUCCESS, SERVICE_LIST_FAIL, SERVICE_LIST_REQUEST, SERVICE_LIST_SUCCESS, SERVICE_SAVE_FAIL, SERVICE_SAVE_REQUEST, SETTINGS_INFO_REQUEST, SETTINGS_INFO_SUCCESS, SETTINGS_INFO_FAIL, SETTINGS_SAVE_SUCCESS, SETTINGS_SAVE_FAIL, SETTINGS_SAVE_REQUEST } from \"../constants/invoiceConstants\";\r\n\r\n\r\n// Client Actions\r\n \r\n// Get Existing Clients List\r\nexport const clientList = (userName, password) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients`, { companyId });\r\n        dispatch({\r\n            type: CLIENT_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n        localStorage.setItem('clientsInfo', JSON.stringify(data));\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Old Client\r\nexport const oldclient = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CLIENT_SAVE_SUCCESS,\r\n        payload: data,\r\n    });\r\n};\r\n\r\n// New Client\r\nexport const newclient = (clientName, companyName, email, address, phone, ABN ) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: CLIENT_SAVE_REQUEST,\r\n        payload: {\r\n            companyId,\r\n            clientName,\r\n            companyName,\r\n            email,\r\n            address,\r\n            phone,\r\n            ABN \r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/clients/create`, { companyId, clientName, companyName, email, address, phone, ABN });\r\n        console.log(\"client received==>\",data)\r\n        dispatch({\r\n            type: CLIENT_SAVE_SUCCESS,\r\n            payload: data.selectedClient[0],\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: CLIENT_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Services\r\n\r\n// Get Existing Services List\r\nexport const serviceList = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SERVICE_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/services`, { companyId });\r\n        dispatch({\r\n            type: SERVICE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n//New Service\r\nexport const newservice = (shortDescription, longDescription, price) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SERVICE_SAVE_REQUEST,\r\n        payload: {\r\n            shortDescription,\r\n            longDescription,\r\n            price\r\n        }\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/services/create`, { companyId, shortDescription, longDescription, price });\r\n\r\n        dispatch({\r\n            type: SERVICE_LIST_REQUEST,\r\n    });\r\n        try {\r\n            const { data } = await Axios.post(`${serverAddress}/api/services`, { companyId });\r\n            dispatch({\r\n                type: SERVICE_LIST_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: SERVICE_LIST_FAIL,\r\n                payload: err.response && err.response.data.message ?\r\n                    err.response.data.message : err.message,\r\n            });\r\n        }\r\n\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// New Invoice\r\nexport const newInvoice = (invoice) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    // console.log(\"invoice action\", invoice)\r\n    dispatch({\r\n        type: INVOICE_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices/new`, {\r\n            companyId: companyId,\r\n            clientName: invoice.clientName,\r\n            email: invoice.email,\r\n            phone: invoice.phone,\r\n            address: invoice.address,\r\n            ABN: invoice.ABN,\r\n            listItems: invoice.listItems\r\n        });\r\n        console.log(\"new invoice action\",invoice)\r\n        console.log('created Innvoice abc received ',data)\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        console.log(\"error\",err)\r\n        dispatch({\r\n            type: INVOICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Invoices List\r\nexport const invoiceList = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: INVOICE_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/invoices`, { companyId });\r\n        dispatch({\r\n            type: INVOICE_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: INVOICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Select Invoice\r\nexport const selectInvoice = (invoice) => async (dispatch) => {\r\n    console.log(\"select iv action==>\",invoice)\r\n    dispatch({\r\n        type: INVOICE_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        dispatch({\r\n            type: INVOICE_SAVE_SUCCESS,\r\n            payload: invoice,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: INVOICE_SAVE_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Settings Info\r\nexport const getSettingsInfo = () => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    dispatch({\r\n        type: SETTINGS_INFO_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/settings`, { companyId });\r\n        dispatch({\r\n            type: SETTINGS_INFO_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};\r\n\r\n// // Update Settings\r\nexport const updateSettings = (stripeKey, invoiceFooter, emailTemplate, smsTemplate) => async (dispatch) => {\r\n    const user = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo'))\r\n        : null;\r\n    const companyId = user.companyId;\r\n    // console.log(\"invoice action\", invoice)\r\n    dispatch({\r\n        type: SETTINGS_SAVE_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.post(`${serverAddress}/api/settings/update`, { companyId,stripeKey,invoiceFooter,emailTemplate,smsTemplate });\r\n        dispatch({\r\n            type: SETTINGS_INFO_SUCCESS,\r\n            payload: data,\r\n        });\r\n     } catch (err) {\r\n        dispatch({\r\n            type: SERVICE_LIST_FAIL,\r\n            payload: err.response && err.response.data.message ?\r\n                err.response.data.message : err.message,\r\n        });\r\n    }\r\n};","D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\screens\\GenerateInvoice\\GenerateInvoice.js",["121","122","123"],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Header.js",[],"D:\\Web Development\\Freelancing\\Projects\\webnapp\\aussiesmarketplace-invoices\\frontend\\src\\components\\Modal\\Modal.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":11,"column":10,"nodeType":"130","messageId":"131","endLine":11,"endColumn":26},{"ruleId":"128","severity":1,"message":"132","line":11,"column":28,"nodeType":"130","messageId":"131","endLine":11,"endColumn":47},{"ruleId":"133","severity":1,"message":"134","line":71,"column":19,"nodeType":"130","endLine":71,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":77,"column":19,"nodeType":"130","endLine":77,"endColumn":34},{"ruleId":"128","severity":1,"message":"135","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":19},{"ruleId":"128","severity":1,"message":"136","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":25},{"ruleId":"128","severity":1,"message":"137","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":32},{"ruleId":"128","severity":1,"message":"138","line":44,"column":9,"nodeType":"130","messageId":"131","endLine":44,"endColumn":22},{"ruleId":"128","severity":1,"message":"139","line":48,"column":9,"nodeType":"130","messageId":"131","endLine":48,"endColumn":20},{"ruleId":"128","severity":1,"message":"140","line":1,"column":319,"nodeType":"130","messageId":"131","endLine":1,"endColumn":336},{"ruleId":"128","severity":1,"message":"141","line":1,"column":338,"nodeType":"130","messageId":"131","endLine":1,"endColumn":358},{"ruleId":"128","severity":1,"message":"142","line":1,"column":360,"nodeType":"130","messageId":"131","endLine":1,"endColumn":380},{"ruleId":"128","severity":1,"message":"143","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":21},{"ruleId":"128","severity":1,"message":"144","line":4,"column":406,"nodeType":"130","messageId":"131","endLine":4,"endColumn":424},{"ruleId":"128","severity":1,"message":"145","line":4,"column":426,"nodeType":"130","messageId":"131","endLine":4,"endColumn":447},{"ruleId":"128","severity":1,"message":"146","line":4,"column":449,"nodeType":"130","messageId":"131","endLine":4,"endColumn":467},{"ruleId":"128","severity":1,"message":"147","line":117,"column":17,"nodeType":"130","messageId":"131","endLine":117,"endColumn":21},{"ruleId":"128","severity":1,"message":"148","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"128","severity":1,"message":"149","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":13},{"ruleId":"128","severity":1,"message":"150","line":8,"column":10,"nodeType":"130","messageId":"131","endLine":8,"endColumn":25},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'shortDescription' is assigned a value but never used.","Identifier","unusedVar","'setShortDescription' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'tempService' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useEffect' is defined but never used.","'getSettingsInfo' is defined but never used.","'selectedInvoiceReducer' is defined but never used.","'deleteInvoice' is assigned a value but never used.","'editInvoice' is assigned a value but never used.","'SERVICE_SAVE_FAIL' is defined but never used.","'SERVICE_SAVE_REQUEST' is defined but never used.","'SERVICE_SAVE_SUCCESS' is defined but never used.","'useSelector' is defined but never used.","'SETTINGS_INFO_FAIL' is defined but never used.","'SETTINGS_SAVE_SUCCESS' is defined but never used.","'SETTINGS_SAVE_FAIL' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'Modal' is defined but never used.","'settingsReducer' is defined but never used.","no-global-assign","no-unsafe-negation"]